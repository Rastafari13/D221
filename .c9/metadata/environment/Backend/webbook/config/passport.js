{"filter":false,"title":"passport.js","tooltip":"/Backend/webbook/config/passport.js","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":83,"column":0},"action":"insert","lines":["var bCrypt = require('bcrypt-nodejs');","const jsonMessagesPath = __dirname + \"/../../assets/jsonMessages/\";","var jsonMessages = require(jsonMessagesPath + \"login\");","module.exports = function(passport, user) {","  var User = user;","  var LocalStrategy = require('passport-local').Strategy;","  passport.serializeUser(function(user, done) {","    done(null, user.id);","  });","  // used to deserialize the user","  passport.deserializeUser(function(id, done) {","    User.findById(id).then(function(user) {","      if (user) {","        done(null, user.get());","      }","      else {","        done(user.errors, null);","      }","    });","  });","  passport.use('local-signup', new LocalStrategy({","      usernameField: 'email',","      passwordField: 'password',","      passReqToCallback: true // allows us to pass back the entire request to the callback","","    },","    function(req, email, password, done) {","      var generateHash = function(password) {","        return bCrypt.hashSync(password, bCrypt.genSaltSync(8), null);","      };","      User.findOne({ where: { email: email } }).then(function(user) {","        if (user) {","          return done(null, false, jsonMessages.user.duplicate);","        }","        else {","          var userPassword = generateHash(password);","          var data = {","            email: email,","            password: userPassword,","            nome: req.body.firstname,","            apelido: req.body.lastname","          };","          User.create(data).then(function(newUser, created) {","            if (!newUser) {","              return done(null, false);","            }","            if (newUser) {","              return done(null, newUser);","            }","          });","        }","      });","    }","  ));","  //LOCAL SIGNIN","  passport.use('local-signin', new LocalStrategy({","      // by default, local strategy uses username and password, we will override with email","      usernameField: 'email',","      passwordField: 'password',","      passReqToCallback: true // allows us to pass back the entire request to the callback","    },","    function(req, email, password, done) {","      var User = user;","      var isValidPassword = function(userpass, password) {","        return bCrypt.compareSync(password, userpass);","","      }","      User.findOne({ where: { email: email } }).then(function(user) {","        if (!user) {","          return done(null, false, jsonMessages.user.email);","        }","        if (!isValidPassword(user.password, password)) {","          return done(null, false, jsonMessages.user.password);","        }","        var userinfo = user.get();","        return done(null, userinfo);","      }).catch(function(err) {","        console.log(\"Error:\", err);","        return done(null, false,  jsonMessages.user.error);","      });","    }","  ));","}",""],"id":1}]]},"ace":{"folds":[],"scrolltop":1317,"scrollleft":0,"selection":{"start":{"row":83,"column":0},"end":{"row":83,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":72,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1607422721936,"hash":"e31bb704c2379e5c9242bb3f4cf3a0fa33e2f78f"}