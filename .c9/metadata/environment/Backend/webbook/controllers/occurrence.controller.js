{"changed":false,"filter":false,"title":"occurrence.controller.js","tooltip":"/Backend/webbook/controllers/occurrence.controller.js","value":"const connect = require('../config/connectMYSQL');\nconst jsonMessagesPath = __dirname + \"/../assets/jsonMessages/\";\nconst jsonMessages = require(jsonMessagesPath + \"bd\");\n\n//read an occurence with an especific ID\nfunction readOccurrenceID(req, res) {\n    const idOccurrence = req.param('id');\n    const post = { id_occurrence: idOccurrence };\n    const query = connect.con.query('SELECT id_occurrence, local, distance, occurrence_type, status, arrival, departure, cost, origin, description, victim_number, id_entity, id_request FROM occurrence where ? ', post, function(err, rows, fields) {\n        console.log(query.sql);\n        if (err) {\n            console.log(err);\n            res.status(jsonMessages.db.noRecords.status).send(jsonMessages.db.dbError);\n        }\n        else {\n            if (rows.length == 0) {\n                res.status(jsonMessages.db.noRecords.status).send(jsonMessages.db.noRecords);\n            }\n            else {\n                res.send(rows);\n            }\n        }\n    });\n}\n    //read all the occurences\nfunction readOccurrence(req, res) {\n    const query = connect.con.query('SELECT id_occurrence, local, distance, occurrence_type, status, arrival, departure, cost, origin, description, victim_number, id_entity, id_request FROM occurrence order by id_occurrence ', function(err, rows, fields) {\n        console.log(query.sql);\n        if (err) {\n            console.log(err);\n            res.status(jsonMessages.db.dbError.status).send(jsonMessages.db.dbError);\n        }\n        else {\n            if (rows.length == 0) {\n                res.status(jsonMessages.db.noRecords.status).send(jsonMessages.db.noRecords);\n            }\n            else {\n                res.send(rows);\n            }\n        }\n    });\n}\n\n    //lê as occorrencias que ainda estão a decorrer\n/*function readOccurrenceFinished(req, res) {\n    const statusF = req.param('status');\n    const post = { status: statusF};\n    const query = connect.con.query('SELECT id_occurrence, local, distance, occurrence_type, status, arrival, departure, cost, origin, description, victim_number, id_entity, id_request FROM occurrence where status= \"Finalizada\" ', post, function(err, rows, fields) {\n        console.log(query.sql);\n        if (err) {\n            console.log(err);\n            res.status(jsonMessages.db.noRecords.status).send(jsonMessages.db.dbError);\n        }\n        else {\n            if (rows.length == 0) {\n                res.status(jsonMessages.db.noRecords.status).send(jsonMessages.db.noRecords);\n            }\n            else {\n                res.send(rows);\n            }\n        }\n    });\n}*/\n\nfunction readOccurrenceStatus(req, res) {\n    const statusF = req.param('status');\n    const post = { status: statusF};\n    const query = connect.con.query('SELECT id_occurrence, local, occurrence_type, departure, victim_number, description, distance,status, arrival, cost, origin, id_entity, id_request FROM occurrence where ?',post, function(err, rows, fields) {\n        console.log(query.sql);\n        if (err) {\n            console.log(err);\n            res.status(jsonMessages.db.dbError.status).send(jsonMessages.db.dbError);\n        }\n        else {\n            if (rows.length == 0) {\n                res.status(jsonMessages.db.noRecords.status).send(jsonMessages.db.noRecords);\n            }\n            else {\n                res.send(rows);\n            }\n        }\n    });\n}\n\nfunction numberOccAct(req, res) {\n    const query = connect.con.query('SELECT COUNT(*) FROM occurrence WHERE status = \"Em curso\"', function(err, rows, fields) {\n        console.log(query.sql);\n        if (err) {\n            console.log(err);\n            res.status(jsonMessages.db.noRecords.status).send(jsonMessages.db.dbError);\n        }\n        else {\n            if (rows.length == 0) {\n                res.status(jsonMessages.db.noRecords.status).send(jsonMessages.db.noRecords);\n            }\n            else {\n                res.send(rows);\n            }\n        }\n    });\n}\n\nfunction numberOccFin(req, res) {\n    const query = connect.con.query('SELECT COUNT(*) FROM occurrence WHERE status = \"Finalizada\"', function(err, rows, fields) {\n        console.log(query.sql);\n        if (err) {\n            console.log(err);\n            res.status(jsonMessages.db.noRecords.status).send(jsonMessages.db.dbError);\n        }\n        else {\n            if (rows.length == 0) {\n                res.status(jsonMessages.db.noRecords.status).send(jsonMessages.db.noRecords);\n            }\n            else {\n                res.send(rows);\n            }\n        }\n    });\n}\n\nfunction numberOccTotal(req, res) {\n    const query = connect.con.query('SELECT COUNT(*) FROM occurrence', function(err, rows, fields) {\n        console.log(query.sql);\n        if (err) {\n            console.log(err);\n            res.status(jsonMessages.db.noRecords.status).send(jsonMessages.db.dbError);\n        }\n        else {\n            if (rows.length == 0) {\n                res.status(jsonMessages.db.noRecords.status).send(jsonMessages.db.noRecords);\n            }\n            else {\n                res.send(rows);\n            }\n        }\n    });\n}\n//export functions\nmodule.exports = {\n    readOccurrenceID: readOccurrenceID,\n    readOccurrence: readOccurrence,\n    readOccurrenceStatus: readOccurrenceStatus,\n    numberOccAct:numberOccAct,\n    numberOccFin:numberOccFin,\n    numberOccTotal:numberOccTotal, \n};","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":928.5,"scrollleft":114.5,"selection":{"start":{"row":144,"column":18},"end":{"row":144,"column":18},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":53,"state":"comment","mode":"ace/mode/javascript"}},"timestamp":1610876403483}