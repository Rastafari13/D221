{"filter":false,"title":"list-associate.js","tooltip":"/Frontend/Frontoffice/startbootstrap-scrolling-nav-gh-pages/js/list-associate.js","undoManager":{"mark":25,"position":25,"stack":[[{"start":{"row":0,"column":0},"end":{"row":20,"column":12},"action":"insert","lines":["(function($) {","    \"use strict\";","","    $(document).ready(function() {","      $('#Table-occurence').DataTable({","        \"language\": {","          \"lengthMenu\": \"Mostrar _MENU_ ocorrências por página\",","          \"zeroRecords\": \"Nada encontrado\",","          \"info\": \"Mostrar página _PAGE_ de _PAGES_\",","          \"infoEmpty\": \"Nenhhuma ocorrência\",","          \"infoFiltered\": \"(Filtrado _MAX_ Ocorrências)\",","          \"search\": \"Procurar:\",","          \"paginate\": {","            \"next\": \"Próxima\",","            \"previous\": \"Anterior\"","          }","        }","      });","    });","","})(jQuery); "],"id":1}],[{"start":{"row":3,"column":0},"end":{"row":18,"column":7},"action":"remove","lines":["    $(document).ready(function() {","      $('#Table-occurence').DataTable({","        \"language\": {","          \"lengthMenu\": \"Mostrar _MENU_ ocorrências por página\",","          \"zeroRecords\": \"Nada encontrado\",","          \"info\": \"Mostrar página _PAGE_ de _PAGES_\",","          \"infoEmpty\": \"Nenhhuma ocorrência\",","          \"infoFiltered\": \"(Filtrado _MAX_ Ocorrências)\",","          \"search\": \"Procurar:\",","          \"paginate\": {","            \"next\": \"Próxima\",","            \"previous\": \"Anterior\"","          }","        }","      });","    });"],"id":2}],[{"start":{"row":3,"column":0},"end":{"row":1208,"column":4},"action":"insert","lines":["/*! Select for DataTables 1.3.1"," * 2015-2019 SpryMedia Ltd - datatables.net/license/mit"," */","","/**"," * @summary     Select for DataTables"," * @description A collection of API methods, events and buttons for DataTables"," *   that provides selection options of the items in a DataTable"," * @version     1.3.1"," * @file        dataTables.select.js"," * @author      SpryMedia Ltd (www.sprymedia.co.uk)"," * @contact     datatables.net/forums"," * @copyright   Copyright 2015-2019 SpryMedia Ltd."," *"," * This source file is free software, available under the following license:"," *   MIT license - http://datatables.net/license/mit"," *"," * This source file is distributed in the hope that it will be useful, but"," * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY"," * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details."," *"," * For details please refer to: http://www.datatables.net/extensions/select"," */","(function( factory ){","\tif ( typeof define === 'function' && define.amd ) {","\t\t// AMD","\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {","\t\t\treturn factory( $, window, document );","\t\t} );","\t}","\telse if ( typeof exports === 'object' ) {","\t\t// CommonJS","\t\tmodule.exports = function (root, $) {","\t\t\tif ( ! root ) {","\t\t\t\troot = window;","\t\t\t}","","\t\t\tif ( ! $ || ! $.fn.dataTable ) {","\t\t\t\t$ = require('datatables.net')(root, $).$;","\t\t\t}","","\t\t\treturn factory( $, root, root.document );","\t\t};","\t}","\telse {","\t\t// Browser","\t\tfactory( jQuery, window, document );","\t}","}(function( $, window, document, undefined ) {","'use strict';","var DataTable = $.fn.dataTable;","","","// Version information for debugger","DataTable.select = {};","","DataTable.select.version = '1.3.1';","","DataTable.select.init = function ( dt ) {","\tvar ctx = dt.settings()[0];","\tvar init = ctx.oInit.select;","\tvar defaults = DataTable.defaults.select;","\tvar opts = init === undefined ?","\t\tdefaults :","\t\tinit;","","\t// Set defaults","\tvar items = 'row';","\tvar style = 'api';","\tvar blurable = false;","\tvar toggleable = true;","\tvar info = true;","\tvar selector = 'td, th';","\tvar className = 'selected';","\tvar setStyle = false;","","\tctx._select = {};","","\t// Initialisation customisations","\tif ( opts === true ) {","\t\tstyle = 'os';","\t\tsetStyle = true;","\t}","\telse if ( typeof opts === 'string' ) {","\t\tstyle = opts;","\t\tsetStyle = true;","\t}","\telse if ( $.isPlainObject( opts ) ) {","\t\tif ( opts.blurable !== undefined ) {","\t\t\tblurable = opts.blurable;","\t\t}","\t\t","\t\tif ( opts.toggleable !== undefined ) {","\t\t\ttoggleable = opts.toggleable;","\t\t}","","\t\tif ( opts.info !== undefined ) {","\t\t\tinfo = opts.info;","\t\t}","","\t\tif ( opts.items !== undefined ) {","\t\t\titems = opts.items;","\t\t}","","\t\tif ( opts.style !== undefined ) {","\t\t\tstyle = opts.style;","\t\t\tsetStyle = true;","\t\t}","\t\telse {","\t\t\tstyle = 'os';","\t\t\tsetStyle = true;","\t\t}","","\t\tif ( opts.selector !== undefined ) {","\t\t\tselector = opts.selector;","\t\t}","","\t\tif ( opts.className !== undefined ) {","\t\t\tclassName = opts.className;","\t\t}","\t}","","\tdt.select.selector( selector );","\tdt.select.items( items );","\tdt.select.style( style );","\tdt.select.blurable( blurable );","\tdt.select.toggleable( toggleable );","\tdt.select.info( info );","\tctx._select.className = className;","","","\t// Sort table based on selected rows. Requires Select Datatables extension","\t$.fn.dataTable.ext.order['select-checkbox'] = function ( settings, col ) {","\t\treturn this.api().column( col, {order: 'index'} ).nodes().map( function ( td ) {","\t\t\tif ( settings._select.items === 'row' ) {","\t\t\t\treturn $( td ).parent().hasClass( settings._select.className );","\t\t\t} else if ( settings._select.items === 'cell' ) {","\t\t\t\treturn $( td ).hasClass( settings._select.className );","\t\t\t}","\t\t\treturn false;","\t\t});","\t};","","\t// If the init options haven't enabled select, but there is a selectable","\t// class name, then enable","\tif ( ! setStyle && $( dt.table().node() ).hasClass( 'selectable' ) ) {","\t\tdt.select.style( 'os' );","\t}","};","","/*","","Select is a collection of API methods, event handlers, event emitters and","buttons (for the `Buttons` extension) for DataTables. It provides the following","features, with an overview of how they are implemented:","","## Selection of rows, columns and cells. Whether an item is selected or not is","   stored in:","","* rows: a `_select_selected` property which contains a boolean value of the","  DataTables' `aoData` object for each row","* columns: a `_select_selected` property which contains a boolean value of the","  DataTables' `aoColumns` object for each column","* cells: a `_selected_cells` property which contains an array of boolean values","  of the `aoData` object for each row. The array is the same length as the","  columns array, with each element of it representing a cell.","","This method of using boolean flags allows Select to operate when nodes have not","been created for rows / cells (DataTables' defer rendering feature).","","## API methods","","A range of API methods are available for triggering selection and de-selection","of rows. Methods are also available to configure the selection events that can","be triggered by an end user (such as which items are to be selected). To a large","extent, these of API methods *is* Select. It is basically a collection of helper","functions that can be used to select items in a DataTable.","","Configuration of select is held in the object `_select` which is attached to the","DataTables settings object on initialisation. Select being available on a table","is not optional when Select is loaded, but its default is for selection only to","be available via the API - so the end user wouldn't be able to select rows","without additional configuration.","","The `_select` object contains the following properties:","","```","{","\titems:string       - Can be `rows`, `columns` or `cells`. Defines what item ","\t                     will be selected if the user is allowed to activate row","\t                     selection using the mouse.","\tstyle:string       - Can be `none`, `single`, `multi` or `os`. Defines the","\t                     interaction style when selecting items","\tblurable:boolean   - If row selection can be cleared by clicking outside of","\t                     the table","\ttoggleable:boolean - If row selection can be cancelled by repeated clicking","\t                     on the row","\tinfo:boolean       - If the selection summary should be shown in the table","\t                     information elements","}","```","","In addition to the API methods, Select also extends the DataTables selector","options for rows, columns and cells adding a `selected` option to the selector","options object, allowing the developer to select only selected items or","unselected items.","","## Mouse selection of items","","Clicking on items can be used to select items. This is done by a simple event","handler that will select the items using the API methods.",""," */","","","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"," * Local functions"," */","","/**"," * Add one or more cells to the selection when shift clicking in OS selection"," * style cell selection."," *"," * Cell range is more complicated than row and column as we want to select"," * in the visible grid rather than by index in sequence. For example, if you"," * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1"," * should also be selected (and not 1-3, 1-4. etc)"," * "," * @param  {DataTable.Api} dt   DataTable"," * @param  {object}        idx  Cell index to select to"," * @param  {object}        last Cell index to select from"," * @private"," */","function cellRange( dt, idx, last )","{","\tvar indexes;","\tvar columnIndexes;","\tvar rowIndexes;","\tvar selectColumns = function ( start, end ) {","\t\tif ( start > end ) {","\t\t\tvar tmp = end;","\t\t\tend = start;","\t\t\tstart = tmp;","\t\t}","\t\t","\t\tvar record = false;","\t\treturn dt.columns( ':visible' ).indexes().filter( function (i) {","\t\t\tif ( i === start ) {","\t\t\t\trecord = true;","\t\t\t}","\t\t\t","\t\t\tif ( i === end ) { // not else if, as start might === end","\t\t\t\trecord = false;","\t\t\t\treturn true;","\t\t\t}","","\t\t\treturn record;","\t\t} );","\t};","","\tvar selectRows = function ( start, end ) {","\t\tvar indexes = dt.rows( { search: 'applied' } ).indexes();","","\t\t// Which comes first - might need to swap","\t\tif ( indexes.indexOf( start ) > indexes.indexOf( end ) ) {","\t\t\tvar tmp = end;","\t\t\tend = start;","\t\t\tstart = tmp;","\t\t}","","\t\tvar record = false;","\t\treturn indexes.filter( function (i) {","\t\t\tif ( i === start ) {","\t\t\t\trecord = true;","\t\t\t}","\t\t\t","\t\t\tif ( i === end ) {","\t\t\t\trecord = false;","\t\t\t\treturn true;","\t\t\t}","","\t\t\treturn record;","\t\t} );","\t};","","\tif ( ! dt.cells( { selected: true } ).any() && ! last ) {","\t\t// select from the top left cell to this one","\t\tcolumnIndexes = selectColumns( 0, idx.column );","\t\trowIndexes = selectRows( 0 , idx.row );","\t}","\telse {","\t\t// Get column indexes between old and new","\t\tcolumnIndexes = selectColumns( last.column, idx.column );","\t\trowIndexes = selectRows( last.row , idx.row );","\t}","","\tindexes = dt.cells( rowIndexes, columnIndexes ).flatten();","","\tif ( ! dt.cells( idx, { selected: true } ).any() ) {","\t\t// Select range","\t\tdt.cells( indexes ).select();","\t}","\telse {","\t\t// Deselect range","\t\tdt.cells( indexes ).deselect();","\t}","}","","/**"," * Disable mouse selection by removing the selectors"," *"," * @param {DataTable.Api} dt DataTable to remove events from"," * @private"," */","function disableMouseSelection( dt )","{","\tvar ctx = dt.settings()[0];","\tvar selector = ctx._select.selector;","","\t$( dt.table().container() )","\t\t.off( 'mousedown.dtSelect', selector )","\t\t.off( 'mouseup.dtSelect', selector )","\t\t.off( 'click.dtSelect', selector );","","\t$('body').off( 'click.dtSelect' + _safeId(dt.table().node()) );","}","","/**"," * Attach mouse listeners to the table to allow mouse selection of items"," *"," * @param {DataTable.Api} dt DataTable to remove events from"," * @private"," */","function enableMouseSelection ( dt )","{","\tvar container = $( dt.table().container() );","\tvar ctx = dt.settings()[0];","\tvar selector = ctx._select.selector;","\tvar matchSelection;","","\tcontainer","\t\t.on( 'mousedown.dtSelect', selector, function(e) {","\t\t\t// Disallow text selection for shift clicking on the table so multi","\t\t\t// element selection doesn't look terrible!","\t\t\tif ( e.shiftKey || e.metaKey || e.ctrlKey ) {","\t\t\t\tcontainer","\t\t\t\t\t.css( '-moz-user-select', 'none' )","\t\t\t\t\t.one('selectstart.dtSelect', selector, function () {","\t\t\t\t\t\treturn false;","\t\t\t\t\t} );","\t\t\t}","","\t\t\tif ( window.getSelection ) {","\t\t\t\tmatchSelection = window.getSelection();","\t\t\t}","\t\t} )","\t\t.on( 'mouseup.dtSelect', selector, function() {","\t\t\t// Allow text selection to occur again, Mozilla style (tested in FF","\t\t\t// 35.0.1 - still required)","\t\t\tcontainer.css( '-moz-user-select', '' );","\t\t} )","\t\t.on( 'click.dtSelect', selector, function ( e ) {","\t\t\tvar items = dt.select.items();","\t\t\tvar idx;","","\t\t\t// If text was selected (click and drag), then we shouldn't change","\t\t\t// the row's selected state","\t\t\tif ( matchSelection ) {","\t\t\t\tvar selection = window.getSelection();","","\t\t\t\t// If the element that contains the selection is not in the table, we can ignore it","\t\t\t\t// This can happen if the developer selects text from the click event","\t\t\t\tif ( ! selection.anchorNode || $(selection.anchorNode).closest('table')[0] === dt.table().node() ) {","\t\t\t\t\tif ( selection !== matchSelection ) {","\t\t\t\t\t\treturn;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","","\t\t\tvar ctx = dt.settings()[0];","\t\t\tvar wrapperClass = $.trim(dt.settings()[0].oClasses.sWrapper).replace(/ +/g, '.');","","\t\t\t// Ignore clicks inside a sub-table","\t\t\tif ( $(e.target).closest('div.'+wrapperClass)[0] != dt.table().container() ) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar cell = dt.cell( $(e.target).closest('td, th') );","","\t\t\t// Check the cell actually belongs to the host DataTable (so child","\t\t\t// rows, etc, are ignored)","\t\t\tif ( ! cell.any() ) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar event = $.Event('user-select.dt');","\t\t\teventTrigger( dt, event, [ items, cell, e ] );","","\t\t\tif ( event.isDefaultPrevented() ) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar cellIndex = cell.index();","\t\t\tif ( items === 'row' ) {","\t\t\t\tidx = cellIndex.row;","\t\t\t\ttypeSelect( e, dt, ctx, 'row', idx );","\t\t\t}","\t\t\telse if ( items === 'column' ) {","\t\t\t\tidx = cell.index().column;","\t\t\t\ttypeSelect( e, dt, ctx, 'column', idx );","\t\t\t}","\t\t\telse if ( items === 'cell' ) {","\t\t\t\tidx = cell.index();","\t\t\t\ttypeSelect( e, dt, ctx, 'cell', idx );","\t\t\t}","","\t\t\tctx._select_lastCell = cellIndex;","\t\t} );","","\t// Blurable","\t$('body').on( 'click.dtSelect' + _safeId(dt.table().node()), function ( e ) {","\t\tif ( ctx._select.blurable ) {","\t\t\t// If the click was inside the DataTables container, don't blur","\t\t\tif ( $(e.target).parents().filter( dt.table().container() ).length ) {","\t\t\t\treturn;","\t\t\t}","","\t\t\t// Ignore elements which have been removed from the DOM (i.e. paging","\t\t\t// buttons)","\t\t\tif ( $(e.target).parents('html').length === 0 ) {","\t\t\t \treturn;","\t\t\t}","","\t\t\t// Don't blur in Editor form","\t\t\tif ( $(e.target).parents('div.DTE').length ) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tclear( ctx, true );","\t\t}","\t} );","}","","/**"," * Trigger an event on a DataTable"," *"," * @param {DataTable.Api} api      DataTable to trigger events on"," * @param  {boolean}      selected true if selected, false if deselected"," * @param  {string}       type     Item type acting on"," * @param  {boolean}      any      Require that there are values before"," *     triggering"," * @private"," */","function eventTrigger ( api, type, args, any )","{","\tif ( any && ! api.flatten().length ) {","\t\treturn;","\t}","","\tif ( typeof type === 'string' ) {","\t\ttype = type +'.dt';","\t}","","\targs.unshift( api );","","\t$(api.table().node()).trigger( type, args );","}","","/**"," * Update the information element of the DataTable showing information about the"," * items selected. This is done by adding tags to the existing text"," * "," * @param {DataTable.Api} api DataTable to update"," * @private"," */","function info ( api )","{","\tvar ctx = api.settings()[0];","","\tif ( ! ctx._select.info || ! ctx.aanFeatures.i ) {","\t\treturn;","\t}","","\tif ( api.select.style() === 'api' ) {","\t\treturn;","\t}","","\tvar rows    = api.rows( { selected: true } ).flatten().length;","\tvar columns = api.columns( { selected: true } ).flatten().length;","\tvar cells   = api.cells( { selected: true } ).flatten().length;","","\tvar add = function ( el, name, num ) {","\t\tel.append( $('<span class=\"select-item\"/>').append( api.i18n(","\t\t\t'select.'+name+'s',","\t\t\t{ _: '%d '+name+'s selected', 0: '', 1: '1 '+name+' selected' },","\t\t\tnum","\t\t) ) );","\t};","","\t// Internal knowledge of DataTables to loop over all information elements","\t$.each( ctx.aanFeatures.i, function ( i, el ) {","\t\tel = $(el);","","\t\tvar output  = $('<span class=\"select-info\"/>');","\t\tadd( output, 'row', rows );","\t\tadd( output, 'column', columns );","\t\tadd( output, 'cell', cells  );","","\t\tvar exisiting = el.children('span.select-info');","\t\tif ( exisiting.length ) {","\t\t\texisiting.remove();","\t\t}","","\t\tif ( output.text() !== '' ) {","\t\t\tel.append( output );","\t\t}","\t} );","}","","/**"," * Initialisation of a new table. Attach event handlers and callbacks to allow"," * Select to operate correctly."," *"," * This will occur _after_ the initial DataTables initialisation, although"," * before Ajax data is rendered, if there is ajax data"," *"," * @param  {DataTable.settings} ctx Settings object to operate on"," * @private"," */","function init ( ctx ) {","\tvar api = new DataTable.Api( ctx );","","\t// Row callback so that classes can be added to rows and cells if the item","\t// was selected before the element was created. This will happen with the","\t// `deferRender` option enabled.","\t// ","\t// This method of attaching to `aoRowCreatedCallback` is a hack until","\t// DataTables has proper events for row manipulation If you are reviewing","\t// this code to create your own plug-ins, please do not do this!","\tctx.aoRowCreatedCallback.push( {","\t\tfn: function ( row, data, index ) {","\t\t\tvar i, ien;","\t\t\tvar d = ctx.aoData[ index ];","","\t\t\t// Row","\t\t\tif ( d._select_selected ) {","\t\t\t\t$( row ).addClass( ctx._select.className );","\t\t\t}","","\t\t\t// Cells and columns - if separated out, we would need to do two","\t\t\t// loops, so it makes sense to combine them into a single one","\t\t\tfor ( i=0, ien=ctx.aoColumns.length ; i<ien ; i++ ) {","\t\t\t\tif ( ctx.aoColumns[i]._select_selected || (d._selected_cells && d._selected_cells[i]) ) {","\t\t\t\t\t$(d.anCells[i]).addClass( ctx._select.className );","\t\t\t\t}","\t\t\t}","\t\t},","\t\tsName: 'select-deferRender'","\t} );","","\t// On Ajax reload we want to reselect all rows which are currently selected,","\t// if there is an rowId (i.e. a unique value to identify each row with)","\tapi.on( 'preXhr.dt.dtSelect', function () {","\t\t// note that column selection doesn't need to be cached and then","\t\t// reselected, as they are already selected","\t\tvar rows = api.rows( { selected: true } ).ids( true ).filter( function ( d ) {","\t\t\treturn d !== undefined;","\t\t} );","","\t\tvar cells = api.cells( { selected: true } ).eq(0).map( function ( cellIdx ) {","\t\t\tvar id = api.row( cellIdx.row ).id( true );","\t\t\treturn id ?","\t\t\t\t{ row: id, column: cellIdx.column } :","\t\t\t\tundefined;","\t\t} ).filter( function ( d ) {","\t\t\treturn d !== undefined;","\t\t} );","","\t\t// On the next draw, reselect the currently selected items","\t\tapi.one( 'draw.dt.dtSelect', function () {","\t\t\tapi.rows( rows ).select();","","\t\t\t// `cells` is not a cell index selector, so it needs a loop","\t\t\tif ( cells.any() ) {","\t\t\t\tcells.each( function ( id ) {","\t\t\t\t\tapi.cells( id.row, id.column ).select();","\t\t\t\t} );","\t\t\t}","\t\t} );","\t} );","","\t// Update the table information element with selected item summary","\tapi.on( 'draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt', function () {","\t\tinfo( api );","\t} );","","\t// Clean up and release","\tapi.on( 'destroy.dtSelect', function () {","\t\tdisableMouseSelection( api );","\t\tapi.off( '.dtSelect' );","\t} );","}","","/**"," * Add one or more items (rows or columns) to the selection when shift clicking"," * in OS selection style"," *"," * @param  {DataTable.Api} dt   DataTable"," * @param  {string}        type Row or column range selector"," * @param  {object}        idx  Item index to select to"," * @param  {object}        last Item index to select from"," * @private"," */","function rowColumnRange( dt, type, idx, last )","{","\t// Add a range of rows from the last selected row to this one","\tvar indexes = dt[type+'s']( { search: 'applied' } ).indexes();","\tvar idx1 = $.inArray( last, indexes );","\tvar idx2 = $.inArray( idx, indexes );","","\tif ( ! dt[type+'s']( { selected: true } ).any() && idx1 === -1 ) {","\t\t// select from top to here - slightly odd, but both Windows and Mac OS","\t\t// do this","\t\tindexes.splice( $.inArray( idx, indexes )+1, indexes.length );","\t}","\telse {","\t\t// reverse so we can shift click 'up' as well as down","\t\tif ( idx1 > idx2 ) {","\t\t\tvar tmp = idx2;","\t\t\tidx2 = idx1;","\t\t\tidx1 = tmp;","\t\t}","","\t\tindexes.splice( idx2+1, indexes.length );","\t\tindexes.splice( 0, idx1 );","\t}","","\tif ( ! dt[type]( idx, { selected: true } ).any() ) {","\t\t// Select range","\t\tdt[type+'s']( indexes ).select();","\t}","\telse {","\t\t// Deselect range - need to keep the clicked on row selected","\t\tindexes.splice( $.inArray( idx, indexes ), 1 );","\t\tdt[type+'s']( indexes ).deselect();","\t}","}","","/**"," * Clear all selected items"," *"," * @param  {DataTable.settings} ctx Settings object of the host DataTable"," * @param  {boolean} [force=false] Force the de-selection to happen, regardless"," *     of selection style"," * @private"," */","function clear( ctx, force )","{","\tif ( force || ctx._select.style === 'single' ) {","\t\tvar api = new DataTable.Api( ctx );","\t\t","\t\tapi.rows( { selected: true } ).deselect();","\t\tapi.columns( { selected: true } ).deselect();","\t\tapi.cells( { selected: true } ).deselect();","\t}","}","","/**"," * Select items based on the current configuration for style and items."," *"," * @param  {object}             e    Mouse event object"," * @param  {DataTables.Api}     dt   DataTable"," * @param  {DataTable.settings} ctx  Settings object of the host DataTable"," * @param  {string}             type Items to select"," * @param  {int|object}         idx  Index of the item to select"," * @private"," */","function typeSelect ( e, dt, ctx, type, idx )","{","\tvar style = dt.select.style();","\tvar toggleable = dt.select.toggleable();","\tvar isSelected = dt[type]( idx, { selected: true } ).any();","\t","\tif ( isSelected && ! toggleable ) {","\t\treturn;","\t}","","\tif ( style === 'os' ) {","\t\tif ( e.ctrlKey || e.metaKey ) {","\t\t\t// Add or remove from the selection","\t\t\tdt[type]( idx ).select( ! isSelected );","\t\t}","\t\telse if ( e.shiftKey ) {","\t\t\tif ( type === 'cell' ) {","\t\t\t\tcellRange( dt, idx, ctx._select_lastCell || null );","\t\t\t}","\t\t\telse {","\t\t\t\trowColumnRange( dt, type, idx, ctx._select_lastCell ?","\t\t\t\t\tctx._select_lastCell[type] :","\t\t\t\t\tnull","\t\t\t\t);","\t\t\t}","\t\t}","\t\telse {","\t\t\t// No cmd or shift click - deselect if selected, or select","\t\t\t// this row only","\t\t\tvar selected = dt[type+'s']( { selected: true } );","","\t\t\tif ( isSelected && selected.flatten().length === 1 ) {","\t\t\t\tdt[type]( idx ).deselect();","\t\t\t}","\t\t\telse {","\t\t\t\tselected.deselect();","\t\t\t\tdt[type]( idx ).select();","\t\t\t}","\t\t}","\t} else if ( style == 'multi+shift' ) {","\t\tif ( e.shiftKey ) {","\t\t\tif ( type === 'cell' ) {","\t\t\t\tcellRange( dt, idx, ctx._select_lastCell || null );","\t\t\t}","\t\t\telse {","\t\t\t\trowColumnRange( dt, type, idx, ctx._select_lastCell ?","\t\t\t\t\tctx._select_lastCell[type] :","\t\t\t\t\tnull","\t\t\t\t);","\t\t\t}","\t\t}","\t\telse {","\t\t\tdt[ type ]( idx ).select( ! isSelected );","\t\t}","\t}","\telse {","\t\tdt[ type ]( idx ).select( ! isSelected );","\t}","}","","function _safeId( node ) {","\treturn node.id.replace(/[^a-zA-Z0-9\\-\\_]/g, '-');","}","","","","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"," * DataTables selectors"," */","","// row and column are basically identical just assigned to different properties","// and checking a different array, so we can dynamically create the functions to","// reduce the code size","$.each( [","\t{ type: 'row', prop: 'aoData' },","\t{ type: 'column', prop: 'aoColumns' }","], function ( i, o ) {","\tDataTable.ext.selector[ o.type ].push( function ( settings, opts, indexes ) {","\t\tvar selected = opts.selected;","\t\tvar data;","\t\tvar out = [];","","\t\tif ( selected !== true && selected !== false ) {","\t\t\treturn indexes;","\t\t}","","\t\tfor ( var i=0, ien=indexes.length ; i<ien ; i++ ) {","\t\t\tdata = settings[ o.prop ][ indexes[i] ];","","\t\t\tif ( (selected === true && data._select_selected === true) ||","\t\t\t     (selected === false && ! data._select_selected )","\t\t\t) {","\t\t\t\tout.push( indexes[i] );","\t\t\t}","\t\t}","","\t\treturn out;","\t} );","} );","","DataTable.ext.selector.cell.push( function ( settings, opts, cells ) {","\tvar selected = opts.selected;","\tvar rowData;","\tvar out = [];","","\tif ( selected === undefined ) {","\t\treturn cells;","\t}","","\tfor ( var i=0, ien=cells.length ; i<ien ; i++ ) {","\t\trowData = settings.aoData[ cells[i].row ];","","\t\tif ( (selected === true && rowData._selected_cells && rowData._selected_cells[ cells[i].column ] === true) ||","\t\t     (selected === false && ( ! rowData._selected_cells || ! rowData._selected_cells[ cells[i].column ] ) )","\t\t) {","\t\t\tout.push( cells[i] );","\t\t}","\t}","","\treturn out;","} );","","","","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"," * DataTables API"," *"," * For complete documentation, please refer to the docs/api directory or the"," * DataTables site"," */","","// Local variables to improve compression","var apiRegister = DataTable.Api.register;","var apiRegisterPlural = DataTable.Api.registerPlural;","","apiRegister( 'select()', function () {","\treturn this.iterator( 'table', function ( ctx ) {","\t\tDataTable.select.init( new DataTable.Api( ctx ) );","\t} );","} );","","apiRegister( 'select.blurable()', function ( flag ) {","\tif ( flag === undefined ) {","\t\treturn this.context[0]._select.blurable;","\t}","","\treturn this.iterator( 'table', function ( ctx ) {","\t\tctx._select.blurable = flag;","\t} );","} );","","apiRegister( 'select.toggleable()', function ( flag ) {","\tif ( flag === undefined ) {","\t\treturn this.context[0]._select.toggleable;","\t}","","\treturn this.iterator( 'table', function ( ctx ) {","\t\tctx._select.toggleable = flag;","\t} );","} );","","apiRegister( 'select.info()', function ( flag ) {","\tif ( info === undefined ) {","\t\treturn this.context[0]._select.info;","\t}","","\treturn this.iterator( 'table', function ( ctx ) {","\t\tctx._select.info = flag;","\t} );","} );","","apiRegister( 'select.items()', function ( items ) {","\tif ( items === undefined ) {","\t\treturn this.context[0]._select.items;","\t}","","\treturn this.iterator( 'table', function ( ctx ) {","\t\tctx._select.items = items;","","\t\teventTrigger( new DataTable.Api( ctx ), 'selectItems', [ items ] );","\t} );","} );","","// Takes effect from the _next_ selection. None disables future selection, but","// does not clear the current selection. Use the `deselect` methods for that","apiRegister( 'select.style()', function ( style ) {","\tif ( style === undefined ) {","\t\treturn this.context[0]._select.style;","\t}","","\treturn this.iterator( 'table', function ( ctx ) {","\t\tctx._select.style = style;","","\t\tif ( ! ctx._select_init ) {","\t\t\tinit( ctx );","\t\t}","","\t\t// Add / remove mouse event handlers. They aren't required when only","\t\t// API selection is available","\t\tvar dt = new DataTable.Api( ctx );","\t\tdisableMouseSelection( dt );","\t\t","\t\tif ( style !== 'api' ) {","\t\t\tenableMouseSelection( dt );","\t\t}","","\t\teventTrigger( new DataTable.Api( ctx ), 'selectStyle', [ style ] );","\t} );","} );","","apiRegister( 'select.selector()', function ( selector ) {","\tif ( selector === undefined ) {","\t\treturn this.context[0]._select.selector;","\t}","","\treturn this.iterator( 'table', function ( ctx ) {","\t\tdisableMouseSelection( new DataTable.Api( ctx ) );","","\t\tctx._select.selector = selector;","","\t\tif ( ctx._select.style !== 'api' ) {","\t\t\tenableMouseSelection( new DataTable.Api( ctx ) );","\t\t}","\t} );","} );","","","","apiRegisterPlural( 'rows().select()', 'row().select()', function ( select ) {","\tvar api = this;","","\tif ( select === false ) {","\t\treturn this.deselect();","\t}","","\tthis.iterator( 'row', function ( ctx, idx ) {","\t\tclear( ctx );","","\t\tctx.aoData[ idx ]._select_selected = true;","\t\t$( ctx.aoData[ idx ].nTr ).addClass( ctx._select.className );","\t} );","","\tthis.iterator( 'table', function ( ctx, i ) {","\t\teventTrigger( api, 'select', [ 'row', api[i] ], true );","\t} );","","\treturn this;","} );","","apiRegisterPlural( 'columns().select()', 'column().select()', function ( select ) {","\tvar api = this;","","\tif ( select === false ) {","\t\treturn this.deselect();","\t}","","\tthis.iterator( 'column', function ( ctx, idx ) {","\t\tclear( ctx );","","\t\tctx.aoColumns[ idx ]._select_selected = true;","","\t\tvar column = new DataTable.Api( ctx ).column( idx );","","\t\t$( column.header() ).addClass( ctx._select.className );","\t\t$( column.footer() ).addClass( ctx._select.className );","","\t\tcolumn.nodes().to$().addClass( ctx._select.className );","\t} );","","\tthis.iterator( 'table', function ( ctx, i ) {","\t\teventTrigger( api, 'select', [ 'column', api[i] ], true );","\t} );","","\treturn this;","} );","","apiRegisterPlural( 'cells().select()', 'cell().select()', function ( select ) {","\tvar api = this;","","\tif ( select === false ) {","\t\treturn this.deselect();","\t}","","\tthis.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {","\t\tclear( ctx );","","\t\tvar data = ctx.aoData[ rowIdx ];","","\t\tif ( data._selected_cells === undefined ) {","\t\t\tdata._selected_cells = [];","\t\t}","","\t\tdata._selected_cells[ colIdx ] = true;","","\t\tif ( data.anCells ) {","\t\t\t$( data.anCells[ colIdx ] ).addClass( ctx._select.className );","\t\t}","\t} );","","\tthis.iterator( 'table', function ( ctx, i ) {","\t\teventTrigger( api, 'select', [ 'cell', api[i] ], true );","\t} );","","\treturn this;","} );","","","apiRegisterPlural( 'rows().deselect()', 'row().deselect()', function () {","\tvar api = this;","","\tthis.iterator( 'row', function ( ctx, idx ) {","\t\tctx.aoData[ idx ]._select_selected = false;","\t\t$( ctx.aoData[ idx ].nTr ).removeClass( ctx._select.className );","\t} );","","\tthis.iterator( 'table', function ( ctx, i ) {","\t\teventTrigger( api, 'deselect', [ 'row', api[i] ], true );","\t} );","","\treturn this;","} );","","apiRegisterPlural( 'columns().deselect()', 'column().deselect()', function () {","\tvar api = this;","","\tthis.iterator( 'column', function ( ctx, idx ) {","\t\tctx.aoColumns[ idx ]._select_selected = false;","","\t\tvar api = new DataTable.Api( ctx );","\t\tvar column = api.column( idx );","","\t\t$( column.header() ).removeClass( ctx._select.className );","\t\t$( column.footer() ).removeClass( ctx._select.className );","","\t\t// Need to loop over each cell, rather than just using","\t\t// `column().nodes()` as cells which are individually selected should","\t\t// not have the `selected` class removed from them","\t\tapi.cells( null, idx ).indexes().each( function (cellIdx) {","\t\t\tvar data = ctx.aoData[ cellIdx.row ];","\t\t\tvar cellSelected = data._selected_cells;","","\t\t\tif ( data.anCells && (! cellSelected || ! cellSelected[ cellIdx.column ]) ) {","\t\t\t\t$( data.anCells[ cellIdx.column  ] ).removeClass( ctx._select.className );","\t\t\t}","\t\t} );","\t} );","","\tthis.iterator( 'table', function ( ctx, i ) {","\t\teventTrigger( api, 'deselect', [ 'column', api[i] ], true );","\t} );","","\treturn this;","} );","","apiRegisterPlural( 'cells().deselect()', 'cell().deselect()', function () {","\tvar api = this;","","\tthis.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {","\t\tvar data = ctx.aoData[ rowIdx ];","","\t\tdata._selected_cells[ colIdx ] = false;","","\t\t// Remove class only if the cells exist, and the cell is not column","\t\t// selected, in which case the class should remain (since it is selected","\t\t// in the column)","\t\tif ( data.anCells && ! ctx.aoColumns[ colIdx ]._select_selected ) {","\t\t\t$( data.anCells[ colIdx ] ).removeClass( ctx._select.className );","\t\t}","\t} );","","\tthis.iterator( 'table', function ( ctx, i ) {","\t\teventTrigger( api, 'deselect', [ 'cell', api[i] ], true );","\t} );","","\treturn this;","} );","","","","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"," * Buttons"," */","function i18n( label, def ) {","\treturn function (dt) {","\t\treturn dt.i18n( 'buttons.'+label, def );","\t};","}","","// Common events with suitable namespaces","function namespacedEvents ( config ) {","\tvar unique = config._eventNamespace;","","\treturn 'draw.dt.DT'+unique+' select.dt.DT'+unique+' deselect.dt.DT'+unique;","}","","function enabled ( dt, config ) {","\tif ( $.inArray( 'rows', config.limitTo ) !== -1 && dt.rows( { selected: true } ).any() ) {","\t\treturn true;","\t}","","\tif ( $.inArray( 'columns', config.limitTo ) !== -1 && dt.columns( { selected: true } ).any() ) {","\t\treturn true;","\t}","","\tif ( $.inArray( 'cells', config.limitTo ) !== -1 && dt.cells( { selected: true } ).any() ) {","\t\treturn true;","\t}","","\treturn false;","}","","var _buttonNamespace = 0;","","$.extend( DataTable.ext.buttons, {","\tselected: {","\t\ttext: i18n( 'selected', 'Selected' ),","\t\tclassName: 'buttons-selected',","\t\tlimitTo: [ 'rows', 'columns', 'cells' ],","\t\tinit: function ( dt, node, config ) {","\t\t\tvar that = this;","\t\t\tconfig._eventNamespace = '.select'+(_buttonNamespace++);","","\t\t\t// .DT namespace listeners are removed by DataTables automatically","\t\t\t// on table destroy","\t\t\tdt.on( namespacedEvents(config), function () {","\t\t\t\tthat.enable( enabled(dt, config) );","\t\t\t} );","","\t\t\tthis.disable();","\t\t},","\t\tdestroy: function ( dt, node, config ) {","\t\t\tdt.off( config._eventNamespace );","\t\t}","\t},","\tselectedSingle: {","\t\ttext: i18n( 'selectedSingle', 'Selected single' ),","\t\tclassName: 'buttons-selected-single',","\t\tinit: function ( dt, node, config ) {","\t\t\tvar that = this;","\t\t\tconfig._eventNamespace = '.select'+(_buttonNamespace++);","","\t\t\tdt.on( namespacedEvents(config), function () {","\t\t\t\tvar count = dt.rows( { selected: true } ).flatten().length +","\t\t\t\t            dt.columns( { selected: true } ).flatten().length +","\t\t\t\t            dt.cells( { selected: true } ).flatten().length;","","\t\t\t\tthat.enable( count === 1 );","\t\t\t} );","","\t\t\tthis.disable();","\t\t},","\t\tdestroy: function ( dt, node, config ) {","\t\t\tdt.off( config._eventNamespace );","\t\t}","\t},","\tselectAll: {","\t\ttext: i18n( 'selectAll', 'Select all' ),","\t\tclassName: 'buttons-select-all',","\t\taction: function () {","\t\t\tvar items = this.select.items();","\t\t\tthis[ items+'s' ]().select();","\t\t}","\t},","\tselectNone: {","\t\ttext: i18n( 'selectNone', 'Deselect all' ),","\t\tclassName: 'buttons-select-none',","\t\taction: function () {","\t\t\tclear( this.settings()[0], true );","\t\t},","\t\tinit: function ( dt, node, config ) {","\t\t\tvar that = this;","\t\t\tconfig._eventNamespace = '.select'+(_buttonNamespace++);","","\t\t\tdt.on( namespacedEvents(config), function () {","\t\t\t\tvar count = dt.rows( { selected: true } ).flatten().length +","\t\t\t\t            dt.columns( { selected: true } ).flatten().length +","\t\t\t\t            dt.cells( { selected: true } ).flatten().length;","","\t\t\t\tthat.enable( count > 0 );","\t\t\t} );","","\t\t\tthis.disable();","\t\t},","\t\tdestroy: function ( dt, node, config ) {","\t\t\tdt.off( config._eventNamespace );","\t\t}","\t}","} );","","$.each( [ 'Row', 'Column', 'Cell' ], function ( i, item ) {","\tvar lc = item.toLowerCase();","","\tDataTable.ext.buttons[ 'select'+item+'s' ] = {","\t\ttext: i18n( 'select'+item+'s', 'Select '+lc+'s' ),","\t\tclassName: 'buttons-select-'+lc+'s',","\t\taction: function () {","\t\t\tthis.select.items( lc );","\t\t},","\t\tinit: function ( dt ) {","\t\t\tvar that = this;","","\t\t\tdt.on( 'selectItems.dt.DT', function ( e, ctx, items ) {","\t\t\t\tthat.active( items === lc );","\t\t\t} );","\t\t}","\t};","} );","","","","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"," * Initialisation"," */","","// DataTables creation - check if select has been defined in the options. Note","// this required that the table be in the document! If it isn't then something","// needs to trigger this method unfortunately. The next major release of","// DataTables will rework the events and address this.","$(document).on( 'preInit.dt.dtSelect', function (e, ctx) {","\tif ( e.namespace !== 'dt' ) {","\t\treturn;","\t}","","\tDataTable.select.init( new DataTable.Api( ctx ) );","} );","","","return DataTable.select;","}));"],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":1210,"column":12},"action":"remove","lines":["(function($) {","    \"use strict\";","","/*! Select for DataTables 1.3.1"," * 2015-2019 SpryMedia Ltd - datatables.net/license/mit"," */","","/**"," * @summary     Select for DataTables"," * @description A collection of API methods, events and buttons for DataTables"," *   that provides selection options of the items in a DataTable"," * @version     1.3.1"," * @file        dataTables.select.js"," * @author      SpryMedia Ltd (www.sprymedia.co.uk)"," * @contact     datatables.net/forums"," * @copyright   Copyright 2015-2019 SpryMedia Ltd."," *"," * This source file is free software, available under the following license:"," *   MIT license - http://datatables.net/license/mit"," *"," * This source file is distributed in the hope that it will be useful, but"," * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY"," * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details."," *"," * For details please refer to: http://www.datatables.net/extensions/select"," */","(function( factory ){","\tif ( typeof define === 'function' && define.amd ) {","\t\t// AMD","\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {","\t\t\treturn factory( $, window, document );","\t\t} );","\t}","\telse if ( typeof exports === 'object' ) {","\t\t// CommonJS","\t\tmodule.exports = function (root, $) {","\t\t\tif ( ! root ) {","\t\t\t\troot = window;","\t\t\t}","","\t\t\tif ( ! $ || ! $.fn.dataTable ) {","\t\t\t\t$ = require('datatables.net')(root, $).$;","\t\t\t}","","\t\t\treturn factory( $, root, root.document );","\t\t};","\t}","\telse {","\t\t// Browser","\t\tfactory( jQuery, window, document );","\t}","}(function( $, window, document, undefined ) {","'use strict';","var DataTable = $.fn.dataTable;","","","// Version information for debugger","DataTable.select = {};","","DataTable.select.version = '1.3.1';","","DataTable.select.init = function ( dt ) {","\tvar ctx = dt.settings()[0];","\tvar init = ctx.oInit.select;","\tvar defaults = DataTable.defaults.select;","\tvar opts = init === undefined ?","\t\tdefaults :","\t\tinit;","","\t// Set defaults","\tvar items = 'row';","\tvar style = 'api';","\tvar blurable = false;","\tvar toggleable = true;","\tvar info = true;","\tvar selector = 'td, th';","\tvar className = 'selected';","\tvar setStyle = false;","","\tctx._select = {};","","\t// Initialisation customisations","\tif ( opts === true ) {","\t\tstyle = 'os';","\t\tsetStyle = true;","\t}","\telse if ( typeof opts === 'string' ) {","\t\tstyle = opts;","\t\tsetStyle = true;","\t}","\telse if ( $.isPlainObject( opts ) ) {","\t\tif ( opts.blurable !== undefined ) {","\t\t\tblurable = opts.blurable;","\t\t}","\t\t","\t\tif ( opts.toggleable !== undefined ) {","\t\t\ttoggleable = opts.toggleable;","\t\t}","","\t\tif ( opts.info !== undefined ) {","\t\t\tinfo = opts.info;","\t\t}","","\t\tif ( opts.items !== undefined ) {","\t\t\titems = opts.items;","\t\t}","","\t\tif ( opts.style !== undefined ) {","\t\t\tstyle = opts.style;","\t\t\tsetStyle = true;","\t\t}","\t\telse {","\t\t\tstyle = 'os';","\t\t\tsetStyle = true;","\t\t}","","\t\tif ( opts.selector !== undefined ) {","\t\t\tselector = opts.selector;","\t\t}","","\t\tif ( opts.className !== undefined ) {","\t\t\tclassName = opts.className;","\t\t}","\t}","","\tdt.select.selector( selector );","\tdt.select.items( items );","\tdt.select.style( style );","\tdt.select.blurable( blurable );","\tdt.select.toggleable( toggleable );","\tdt.select.info( info );","\tctx._select.className = className;","","","\t// Sort table based on selected rows. Requires Select Datatables extension","\t$.fn.dataTable.ext.order['select-checkbox'] = function ( settings, col ) {","\t\treturn this.api().column( col, {order: 'index'} ).nodes().map( function ( td ) {","\t\t\tif ( settings._select.items === 'row' ) {","\t\t\t\treturn $( td ).parent().hasClass( settings._select.className );","\t\t\t} else if ( settings._select.items === 'cell' ) {","\t\t\t\treturn $( td ).hasClass( settings._select.className );","\t\t\t}","\t\t\treturn false;","\t\t});","\t};","","\t// If the init options haven't enabled select, but there is a selectable","\t// class name, then enable","\tif ( ! setStyle && $( dt.table().node() ).hasClass( 'selectable' ) ) {","\t\tdt.select.style( 'os' );","\t}","};","","/*","","Select is a collection of API methods, event handlers, event emitters and","buttons (for the `Buttons` extension) for DataTables. It provides the following","features, with an overview of how they are implemented:","","## Selection of rows, columns and cells. Whether an item is selected or not is","   stored in:","","* rows: a `_select_selected` property which contains a boolean value of the","  DataTables' `aoData` object for each row","* columns: a `_select_selected` property which contains a boolean value of the","  DataTables' `aoColumns` object for each column","* cells: a `_selected_cells` property which contains an array of boolean values","  of the `aoData` object for each row. The array is the same length as the","  columns array, with each element of it representing a cell.","","This method of using boolean flags allows Select to operate when nodes have not","been created for rows / cells (DataTables' defer rendering feature).","","## API methods","","A range of API methods are available for triggering selection and de-selection","of rows. Methods are also available to configure the selection events that can","be triggered by an end user (such as which items are to be selected). To a large","extent, these of API methods *is* Select. It is basically a collection of helper","functions that can be used to select items in a DataTable.","","Configuration of select is held in the object `_select` which is attached to the","DataTables settings object on initialisation. Select being available on a table","is not optional when Select is loaded, but its default is for selection only to","be available via the API - so the end user wouldn't be able to select rows","without additional configuration.","","The `_select` object contains the following properties:","","```","{","\titems:string       - Can be `rows`, `columns` or `cells`. Defines what item ","\t                     will be selected if the user is allowed to activate row","\t                     selection using the mouse.","\tstyle:string       - Can be `none`, `single`, `multi` or `os`. Defines the","\t                     interaction style when selecting items","\tblurable:boolean   - If row selection can be cleared by clicking outside of","\t                     the table","\ttoggleable:boolean - If row selection can be cancelled by repeated clicking","\t                     on the row","\tinfo:boolean       - If the selection summary should be shown in the table","\t                     information elements","}","```","","In addition to the API methods, Select also extends the DataTables selector","options for rows, columns and cells adding a `selected` option to the selector","options object, allowing the developer to select only selected items or","unselected items.","","## Mouse selection of items","","Clicking on items can be used to select items. This is done by a simple event","handler that will select the items using the API methods.",""," */","","","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"," * Local functions"," */","","/**"," * Add one or more cells to the selection when shift clicking in OS selection"," * style cell selection."," *"," * Cell range is more complicated than row and column as we want to select"," * in the visible grid rather than by index in sequence. For example, if you"," * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1"," * should also be selected (and not 1-3, 1-4. etc)"," * "," * @param  {DataTable.Api} dt   DataTable"," * @param  {object}        idx  Cell index to select to"," * @param  {object}        last Cell index to select from"," * @private"," */","function cellRange( dt, idx, last )","{","\tvar indexes;","\tvar columnIndexes;","\tvar rowIndexes;","\tvar selectColumns = function ( start, end ) {","\t\tif ( start > end ) {","\t\t\tvar tmp = end;","\t\t\tend = start;","\t\t\tstart = tmp;","\t\t}","\t\t","\t\tvar record = false;","\t\treturn dt.columns( ':visible' ).indexes().filter( function (i) {","\t\t\tif ( i === start ) {","\t\t\t\trecord = true;","\t\t\t}","\t\t\t","\t\t\tif ( i === end ) { // not else if, as start might === end","\t\t\t\trecord = false;","\t\t\t\treturn true;","\t\t\t}","","\t\t\treturn record;","\t\t} );","\t};","","\tvar selectRows = function ( start, end ) {","\t\tvar indexes = dt.rows( { search: 'applied' } ).indexes();","","\t\t// Which comes first - might need to swap","\t\tif ( indexes.indexOf( start ) > indexes.indexOf( end ) ) {","\t\t\tvar tmp = end;","\t\t\tend = start;","\t\t\tstart = tmp;","\t\t}","","\t\tvar record = false;","\t\treturn indexes.filter( function (i) {","\t\t\tif ( i === start ) {","\t\t\t\trecord = true;","\t\t\t}","\t\t\t","\t\t\tif ( i === end ) {","\t\t\t\trecord = false;","\t\t\t\treturn true;","\t\t\t}","","\t\t\treturn record;","\t\t} );","\t};","","\tif ( ! dt.cells( { selected: true } ).any() && ! last ) {","\t\t// select from the top left cell to this one","\t\tcolumnIndexes = selectColumns( 0, idx.column );","\t\trowIndexes = selectRows( 0 , idx.row );","\t}","\telse {","\t\t// Get column indexes between old and new","\t\tcolumnIndexes = selectColumns( last.column, idx.column );","\t\trowIndexes = selectRows( last.row , idx.row );","\t}","","\tindexes = dt.cells( rowIndexes, columnIndexes ).flatten();","","\tif ( ! dt.cells( idx, { selected: true } ).any() ) {","\t\t// Select range","\t\tdt.cells( indexes ).select();","\t}","\telse {","\t\t// Deselect range","\t\tdt.cells( indexes ).deselect();","\t}","}","","/**"," * Disable mouse selection by removing the selectors"," *"," * @param {DataTable.Api} dt DataTable to remove events from"," * @private"," */","function disableMouseSelection( dt )","{","\tvar ctx = dt.settings()[0];","\tvar selector = ctx._select.selector;","","\t$( dt.table().container() )","\t\t.off( 'mousedown.dtSelect', selector )","\t\t.off( 'mouseup.dtSelect', selector )","\t\t.off( 'click.dtSelect', selector );","","\t$('body').off( 'click.dtSelect' + _safeId(dt.table().node()) );","}","","/**"," * Attach mouse listeners to the table to allow mouse selection of items"," *"," * @param {DataTable.Api} dt DataTable to remove events from"," * @private"," */","function enableMouseSelection ( dt )","{","\tvar container = $( dt.table().container() );","\tvar ctx = dt.settings()[0];","\tvar selector = ctx._select.selector;","\tvar matchSelection;","","\tcontainer","\t\t.on( 'mousedown.dtSelect', selector, function(e) {","\t\t\t// Disallow text selection for shift clicking on the table so multi","\t\t\t// element selection doesn't look terrible!","\t\t\tif ( e.shiftKey || e.metaKey || e.ctrlKey ) {","\t\t\t\tcontainer","\t\t\t\t\t.css( '-moz-user-select', 'none' )","\t\t\t\t\t.one('selectstart.dtSelect', selector, function () {","\t\t\t\t\t\treturn false;","\t\t\t\t\t} );","\t\t\t}","","\t\t\tif ( window.getSelection ) {","\t\t\t\tmatchSelection = window.getSelection();","\t\t\t}","\t\t} )","\t\t.on( 'mouseup.dtSelect', selector, function() {","\t\t\t// Allow text selection to occur again, Mozilla style (tested in FF","\t\t\t// 35.0.1 - still required)","\t\t\tcontainer.css( '-moz-user-select', '' );","\t\t} )","\t\t.on( 'click.dtSelect', selector, function ( e ) {","\t\t\tvar items = dt.select.items();","\t\t\tvar idx;","","\t\t\t// If text was selected (click and drag), then we shouldn't change","\t\t\t// the row's selected state","\t\t\tif ( matchSelection ) {","\t\t\t\tvar selection = window.getSelection();","","\t\t\t\t// If the element that contains the selection is not in the table, we can ignore it","\t\t\t\t// This can happen if the developer selects text from the click event","\t\t\t\tif ( ! selection.anchorNode || $(selection.anchorNode).closest('table')[0] === dt.table().node() ) {","\t\t\t\t\tif ( selection !== matchSelection ) {","\t\t\t\t\t\treturn;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","","\t\t\tvar ctx = dt.settings()[0];","\t\t\tvar wrapperClass = $.trim(dt.settings()[0].oClasses.sWrapper).replace(/ +/g, '.');","","\t\t\t// Ignore clicks inside a sub-table","\t\t\tif ( $(e.target).closest('div.'+wrapperClass)[0] != dt.table().container() ) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar cell = dt.cell( $(e.target).closest('td, th') );","","\t\t\t// Check the cell actually belongs to the host DataTable (so child","\t\t\t// rows, etc, are ignored)","\t\t\tif ( ! cell.any() ) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar event = $.Event('user-select.dt');","\t\t\teventTrigger( dt, event, [ items, cell, e ] );","","\t\t\tif ( event.isDefaultPrevented() ) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar cellIndex = cell.index();","\t\t\tif ( items === 'row' ) {","\t\t\t\tidx = cellIndex.row;","\t\t\t\ttypeSelect( e, dt, ctx, 'row', idx );","\t\t\t}","\t\t\telse if ( items === 'column' ) {","\t\t\t\tidx = cell.index().column;","\t\t\t\ttypeSelect( e, dt, ctx, 'column', idx );","\t\t\t}","\t\t\telse if ( items === 'cell' ) {","\t\t\t\tidx = cell.index();","\t\t\t\ttypeSelect( e, dt, ctx, 'cell', idx );","\t\t\t}","","\t\t\tctx._select_lastCell = cellIndex;","\t\t} );","","\t// Blurable","\t$('body').on( 'click.dtSelect' + _safeId(dt.table().node()), function ( e ) {","\t\tif ( ctx._select.blurable ) {","\t\t\t// If the click was inside the DataTables container, don't blur","\t\t\tif ( $(e.target).parents().filter( dt.table().container() ).length ) {","\t\t\t\treturn;","\t\t\t}","","\t\t\t// Ignore elements which have been removed from the DOM (i.e. paging","\t\t\t// buttons)","\t\t\tif ( $(e.target).parents('html').length === 0 ) {","\t\t\t \treturn;","\t\t\t}","","\t\t\t// Don't blur in Editor form","\t\t\tif ( $(e.target).parents('div.DTE').length ) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tclear( ctx, true );","\t\t}","\t} );","}","","/**"," * Trigger an event on a DataTable"," *"," * @param {DataTable.Api} api      DataTable to trigger events on"," * @param  {boolean}      selected true if selected, false if deselected"," * @param  {string}       type     Item type acting on"," * @param  {boolean}      any      Require that there are values before"," *     triggering"," * @private"," */","function eventTrigger ( api, type, args, any )","{","\tif ( any && ! api.flatten().length ) {","\t\treturn;","\t}","","\tif ( typeof type === 'string' ) {","\t\ttype = type +'.dt';","\t}","","\targs.unshift( api );","","\t$(api.table().node()).trigger( type, args );","}","","/**"," * Update the information element of the DataTable showing information about the"," * items selected. This is done by adding tags to the existing text"," * "," * @param {DataTable.Api} api DataTable to update"," * @private"," */","function info ( api )","{","\tvar ctx = api.settings()[0];","","\tif ( ! ctx._select.info || ! ctx.aanFeatures.i ) {","\t\treturn;","\t}","","\tif ( api.select.style() === 'api' ) {","\t\treturn;","\t}","","\tvar rows    = api.rows( { selected: true } ).flatten().length;","\tvar columns = api.columns( { selected: true } ).flatten().length;","\tvar cells   = api.cells( { selected: true } ).flatten().length;","","\tvar add = function ( el, name, num ) {","\t\tel.append( $('<span class=\"select-item\"/>').append( api.i18n(","\t\t\t'select.'+name+'s',","\t\t\t{ _: '%d '+name+'s selected', 0: '', 1: '1 '+name+' selected' },","\t\t\tnum","\t\t) ) );","\t};","","\t// Internal knowledge of DataTables to loop over all information elements","\t$.each( ctx.aanFeatures.i, function ( i, el ) {","\t\tel = $(el);","","\t\tvar output  = $('<span class=\"select-info\"/>');","\t\tadd( output, 'row', rows );","\t\tadd( output, 'column', columns );","\t\tadd( output, 'cell', cells  );","","\t\tvar exisiting = el.children('span.select-info');","\t\tif ( exisiting.length ) {","\t\t\texisiting.remove();","\t\t}","","\t\tif ( output.text() !== '' ) {","\t\t\tel.append( output );","\t\t}","\t} );","}","","/**"," * Initialisation of a new table. Attach event handlers and callbacks to allow"," * Select to operate correctly."," *"," * This will occur _after_ the initial DataTables initialisation, although"," * before Ajax data is rendered, if there is ajax data"," *"," * @param  {DataTable.settings} ctx Settings object to operate on"," * @private"," */","function init ( ctx ) {","\tvar api = new DataTable.Api( ctx );","","\t// Row callback so that classes can be added to rows and cells if the item","\t// was selected before the element was created. This will happen with the","\t// `deferRender` option enabled.","\t// ","\t// This method of attaching to `aoRowCreatedCallback` is a hack until","\t// DataTables has proper events for row manipulation If you are reviewing","\t// this code to create your own plug-ins, please do not do this!","\tctx.aoRowCreatedCallback.push( {","\t\tfn: function ( row, data, index ) {","\t\t\tvar i, ien;","\t\t\tvar d = ctx.aoData[ index ];","","\t\t\t// Row","\t\t\tif ( d._select_selected ) {","\t\t\t\t$( row ).addClass( ctx._select.className );","\t\t\t}","","\t\t\t// Cells and columns - if separated out, we would need to do two","\t\t\t// loops, so it makes sense to combine them into a single one","\t\t\tfor ( i=0, ien=ctx.aoColumns.length ; i<ien ; i++ ) {","\t\t\t\tif ( ctx.aoColumns[i]._select_selected || (d._selected_cells && d._selected_cells[i]) ) {","\t\t\t\t\t$(d.anCells[i]).addClass( ctx._select.className );","\t\t\t\t}","\t\t\t}","\t\t},","\t\tsName: 'select-deferRender'","\t} );","","\t// On Ajax reload we want to reselect all rows which are currently selected,","\t// if there is an rowId (i.e. a unique value to identify each row with)","\tapi.on( 'preXhr.dt.dtSelect', function () {","\t\t// note that column selection doesn't need to be cached and then","\t\t// reselected, as they are already selected","\t\tvar rows = api.rows( { selected: true } ).ids( true ).filter( function ( d ) {","\t\t\treturn d !== undefined;","\t\t} );","","\t\tvar cells = api.cells( { selected: true } ).eq(0).map( function ( cellIdx ) {","\t\t\tvar id = api.row( cellIdx.row ).id( true );","\t\t\treturn id ?","\t\t\t\t{ row: id, column: cellIdx.column } :","\t\t\t\tundefined;","\t\t} ).filter( function ( d ) {","\t\t\treturn d !== undefined;","\t\t} );","","\t\t// On the next draw, reselect the currently selected items","\t\tapi.one( 'draw.dt.dtSelect', function () {","\t\t\tapi.rows( rows ).select();","","\t\t\t// `cells` is not a cell index selector, so it needs a loop","\t\t\tif ( cells.any() ) {","\t\t\t\tcells.each( function ( id ) {","\t\t\t\t\tapi.cells( id.row, id.column ).select();","\t\t\t\t} );","\t\t\t}","\t\t} );","\t} );","","\t// Update the table information element with selected item summary","\tapi.on( 'draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt', function () {","\t\tinfo( api );","\t} );","","\t// Clean up and release","\tapi.on( 'destroy.dtSelect', function () {","\t\tdisableMouseSelection( api );","\t\tapi.off( '.dtSelect' );","\t} );","}","","/**"," * Add one or more items (rows or columns) to the selection when shift clicking"," * in OS selection style"," *"," * @param  {DataTable.Api} dt   DataTable"," * @param  {string}        type Row or column range selector"," * @param  {object}        idx  Item index to select to"," * @param  {object}        last Item index to select from"," * @private"," */","function rowColumnRange( dt, type, idx, last )","{","\t// Add a range of rows from the last selected row to this one","\tvar indexes = dt[type+'s']( { search: 'applied' } ).indexes();","\tvar idx1 = $.inArray( last, indexes );","\tvar idx2 = $.inArray( idx, indexes );","","\tif ( ! dt[type+'s']( { selected: true } ).any() && idx1 === -1 ) {","\t\t// select from top to here - slightly odd, but both Windows and Mac OS","\t\t// do this","\t\tindexes.splice( $.inArray( idx, indexes )+1, indexes.length );","\t}","\telse {","\t\t// reverse so we can shift click 'up' as well as down","\t\tif ( idx1 > idx2 ) {","\t\t\tvar tmp = idx2;","\t\t\tidx2 = idx1;","\t\t\tidx1 = tmp;","\t\t}","","\t\tindexes.splice( idx2+1, indexes.length );","\t\tindexes.splice( 0, idx1 );","\t}","","\tif ( ! dt[type]( idx, { selected: true } ).any() ) {","\t\t// Select range","\t\tdt[type+'s']( indexes ).select();","\t}","\telse {","\t\t// Deselect range - need to keep the clicked on row selected","\t\tindexes.splice( $.inArray( idx, indexes ), 1 );","\t\tdt[type+'s']( indexes ).deselect();","\t}","}","","/**"," * Clear all selected items"," *"," * @param  {DataTable.settings} ctx Settings object of the host DataTable"," * @param  {boolean} [force=false] Force the de-selection to happen, regardless"," *     of selection style"," * @private"," */","function clear( ctx, force )","{","\tif ( force || ctx._select.style === 'single' ) {","\t\tvar api = new DataTable.Api( ctx );","\t\t","\t\tapi.rows( { selected: true } ).deselect();","\t\tapi.columns( { selected: true } ).deselect();","\t\tapi.cells( { selected: true } ).deselect();","\t}","}","","/**"," * Select items based on the current configuration for style and items."," *"," * @param  {object}             e    Mouse event object"," * @param  {DataTables.Api}     dt   DataTable"," * @param  {DataTable.settings} ctx  Settings object of the host DataTable"," * @param  {string}             type Items to select"," * @param  {int|object}         idx  Index of the item to select"," * @private"," */","function typeSelect ( e, dt, ctx, type, idx )","{","\tvar style = dt.select.style();","\tvar toggleable = dt.select.toggleable();","\tvar isSelected = dt[type]( idx, { selected: true } ).any();","\t","\tif ( isSelected && ! toggleable ) {","\t\treturn;","\t}","","\tif ( style === 'os' ) {","\t\tif ( e.ctrlKey || e.metaKey ) {","\t\t\t// Add or remove from the selection","\t\t\tdt[type]( idx ).select( ! isSelected );","\t\t}","\t\telse if ( e.shiftKey ) {","\t\t\tif ( type === 'cell' ) {","\t\t\t\tcellRange( dt, idx, ctx._select_lastCell || null );","\t\t\t}","\t\t\telse {","\t\t\t\trowColumnRange( dt, type, idx, ctx._select_lastCell ?","\t\t\t\t\tctx._select_lastCell[type] :","\t\t\t\t\tnull","\t\t\t\t);","\t\t\t}","\t\t}","\t\telse {","\t\t\t// No cmd or shift click - deselect if selected, or select","\t\t\t// this row only","\t\t\tvar selected = dt[type+'s']( { selected: true } );","","\t\t\tif ( isSelected && selected.flatten().length === 1 ) {","\t\t\t\tdt[type]( idx ).deselect();","\t\t\t}","\t\t\telse {","\t\t\t\tselected.deselect();","\t\t\t\tdt[type]( idx ).select();","\t\t\t}","\t\t}","\t} else if ( style == 'multi+shift' ) {","\t\tif ( e.shiftKey ) {","\t\t\tif ( type === 'cell' ) {","\t\t\t\tcellRange( dt, idx, ctx._select_lastCell || null );","\t\t\t}","\t\t\telse {","\t\t\t\trowColumnRange( dt, type, idx, ctx._select_lastCell ?","\t\t\t\t\tctx._select_lastCell[type] :","\t\t\t\t\tnull","\t\t\t\t);","\t\t\t}","\t\t}","\t\telse {","\t\t\tdt[ type ]( idx ).select( ! isSelected );","\t\t}","\t}","\telse {","\t\tdt[ type ]( idx ).select( ! isSelected );","\t}","}","","function _safeId( node ) {","\treturn node.id.replace(/[^a-zA-Z0-9\\-\\_]/g, '-');","}","","","","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"," * DataTables selectors"," */","","// row and column are basically identical just assigned to different properties","// and checking a different array, so we can dynamically create the functions to","// reduce the code size","$.each( [","\t{ type: 'row', prop: 'aoData' },","\t{ type: 'column', prop: 'aoColumns' }","], function ( i, o ) {","\tDataTable.ext.selector[ o.type ].push( function ( settings, opts, indexes ) {","\t\tvar selected = opts.selected;","\t\tvar data;","\t\tvar out = [];","","\t\tif ( selected !== true && selected !== false ) {","\t\t\treturn indexes;","\t\t}","","\t\tfor ( var i=0, ien=indexes.length ; i<ien ; i++ ) {","\t\t\tdata = settings[ o.prop ][ indexes[i] ];","","\t\t\tif ( (selected === true && data._select_selected === true) ||","\t\t\t     (selected === false && ! data._select_selected )","\t\t\t) {","\t\t\t\tout.push( indexes[i] );","\t\t\t}","\t\t}","","\t\treturn out;","\t} );","} );","","DataTable.ext.selector.cell.push( function ( settings, opts, cells ) {","\tvar selected = opts.selected;","\tvar rowData;","\tvar out = [];","","\tif ( selected === undefined ) {","\t\treturn cells;","\t}","","\tfor ( var i=0, ien=cells.length ; i<ien ; i++ ) {","\t\trowData = settings.aoData[ cells[i].row ];","","\t\tif ( (selected === true && rowData._selected_cells && rowData._selected_cells[ cells[i].column ] === true) ||","\t\t     (selected === false && ( ! rowData._selected_cells || ! rowData._selected_cells[ cells[i].column ] ) )","\t\t) {","\t\t\tout.push( cells[i] );","\t\t}","\t}","","\treturn out;","} );","","","","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"," * DataTables API"," *"," * For complete documentation, please refer to the docs/api directory or the"," * DataTables site"," */","","// Local variables to improve compression","var apiRegister = DataTable.Api.register;","var apiRegisterPlural = DataTable.Api.registerPlural;","","apiRegister( 'select()', function () {","\treturn this.iterator( 'table', function ( ctx ) {","\t\tDataTable.select.init( new DataTable.Api( ctx ) );","\t} );","} );","","apiRegister( 'select.blurable()', function ( flag ) {","\tif ( flag === undefined ) {","\t\treturn this.context[0]._select.blurable;","\t}","","\treturn this.iterator( 'table', function ( ctx ) {","\t\tctx._select.blurable = flag;","\t} );","} );","","apiRegister( 'select.toggleable()', function ( flag ) {","\tif ( flag === undefined ) {","\t\treturn this.context[0]._select.toggleable;","\t}","","\treturn this.iterator( 'table', function ( ctx ) {","\t\tctx._select.toggleable = flag;","\t} );","} );","","apiRegister( 'select.info()', function ( flag ) {","\tif ( info === undefined ) {","\t\treturn this.context[0]._select.info;","\t}","","\treturn this.iterator( 'table', function ( ctx ) {","\t\tctx._select.info = flag;","\t} );","} );","","apiRegister( 'select.items()', function ( items ) {","\tif ( items === undefined ) {","\t\treturn this.context[0]._select.items;","\t}","","\treturn this.iterator( 'table', function ( ctx ) {","\t\tctx._select.items = items;","","\t\teventTrigger( new DataTable.Api( ctx ), 'selectItems', [ items ] );","\t} );","} );","","// Takes effect from the _next_ selection. None disables future selection, but","// does not clear the current selection. Use the `deselect` methods for that","apiRegister( 'select.style()', function ( style ) {","\tif ( style === undefined ) {","\t\treturn this.context[0]._select.style;","\t}","","\treturn this.iterator( 'table', function ( ctx ) {","\t\tctx._select.style = style;","","\t\tif ( ! ctx._select_init ) {","\t\t\tinit( ctx );","\t\t}","","\t\t// Add / remove mouse event handlers. They aren't required when only","\t\t// API selection is available","\t\tvar dt = new DataTable.Api( ctx );","\t\tdisableMouseSelection( dt );","\t\t","\t\tif ( style !== 'api' ) {","\t\t\tenableMouseSelection( dt );","\t\t}","","\t\teventTrigger( new DataTable.Api( ctx ), 'selectStyle', [ style ] );","\t} );","} );","","apiRegister( 'select.selector()', function ( selector ) {","\tif ( selector === undefined ) {","\t\treturn this.context[0]._select.selector;","\t}","","\treturn this.iterator( 'table', function ( ctx ) {","\t\tdisableMouseSelection( new DataTable.Api( ctx ) );","","\t\tctx._select.selector = selector;","","\t\tif ( ctx._select.style !== 'api' ) {","\t\t\tenableMouseSelection( new DataTable.Api( ctx ) );","\t\t}","\t} );","} );","","","","apiRegisterPlural( 'rows().select()', 'row().select()', function ( select ) {","\tvar api = this;","","\tif ( select === false ) {","\t\treturn this.deselect();","\t}","","\tthis.iterator( 'row', function ( ctx, idx ) {","\t\tclear( ctx );","","\t\tctx.aoData[ idx ]._select_selected = true;","\t\t$( ctx.aoData[ idx ].nTr ).addClass( ctx._select.className );","\t} );","","\tthis.iterator( 'table', function ( ctx, i ) {","\t\teventTrigger( api, 'select', [ 'row', api[i] ], true );","\t} );","","\treturn this;","} );","","apiRegisterPlural( 'columns().select()', 'column().select()', function ( select ) {","\tvar api = this;","","\tif ( select === false ) {","\t\treturn this.deselect();","\t}","","\tthis.iterator( 'column', function ( ctx, idx ) {","\t\tclear( ctx );","","\t\tctx.aoColumns[ idx ]._select_selected = true;","","\t\tvar column = new DataTable.Api( ctx ).column( idx );","","\t\t$( column.header() ).addClass( ctx._select.className );","\t\t$( column.footer() ).addClass( ctx._select.className );","","\t\tcolumn.nodes().to$().addClass( ctx._select.className );","\t} );","","\tthis.iterator( 'table', function ( ctx, i ) {","\t\teventTrigger( api, 'select', [ 'column', api[i] ], true );","\t} );","","\treturn this;","} );","","apiRegisterPlural( 'cells().select()', 'cell().select()', function ( select ) {","\tvar api = this;","","\tif ( select === false ) {","\t\treturn this.deselect();","\t}","","\tthis.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {","\t\tclear( ctx );","","\t\tvar data = ctx.aoData[ rowIdx ];","","\t\tif ( data._selected_cells === undefined ) {","\t\t\tdata._selected_cells = [];","\t\t}","","\t\tdata._selected_cells[ colIdx ] = true;","","\t\tif ( data.anCells ) {","\t\t\t$( data.anCells[ colIdx ] ).addClass( ctx._select.className );","\t\t}","\t} );","","\tthis.iterator( 'table', function ( ctx, i ) {","\t\teventTrigger( api, 'select', [ 'cell', api[i] ], true );","\t} );","","\treturn this;","} );","","","apiRegisterPlural( 'rows().deselect()', 'row().deselect()', function () {","\tvar api = this;","","\tthis.iterator( 'row', function ( ctx, idx ) {","\t\tctx.aoData[ idx ]._select_selected = false;","\t\t$( ctx.aoData[ idx ].nTr ).removeClass( ctx._select.className );","\t} );","","\tthis.iterator( 'table', function ( ctx, i ) {","\t\teventTrigger( api, 'deselect', [ 'row', api[i] ], true );","\t} );","","\treturn this;","} );","","apiRegisterPlural( 'columns().deselect()', 'column().deselect()', function () {","\tvar api = this;","","\tthis.iterator( 'column', function ( ctx, idx ) {","\t\tctx.aoColumns[ idx ]._select_selected = false;","","\t\tvar api = new DataTable.Api( ctx );","\t\tvar column = api.column( idx );","","\t\t$( column.header() ).removeClass( ctx._select.className );","\t\t$( column.footer() ).removeClass( ctx._select.className );","","\t\t// Need to loop over each cell, rather than just using","\t\t// `column().nodes()` as cells which are individually selected should","\t\t// not have the `selected` class removed from them","\t\tapi.cells( null, idx ).indexes().each( function (cellIdx) {","\t\t\tvar data = ctx.aoData[ cellIdx.row ];","\t\t\tvar cellSelected = data._selected_cells;","","\t\t\tif ( data.anCells && (! cellSelected || ! cellSelected[ cellIdx.column ]) ) {","\t\t\t\t$( data.anCells[ cellIdx.column  ] ).removeClass( ctx._select.className );","\t\t\t}","\t\t} );","\t} );","","\tthis.iterator( 'table', function ( ctx, i ) {","\t\teventTrigger( api, 'deselect', [ 'column', api[i] ], true );","\t} );","","\treturn this;","} );","","apiRegisterPlural( 'cells().deselect()', 'cell().deselect()', function () {","\tvar api = this;","","\tthis.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {","\t\tvar data = ctx.aoData[ rowIdx ];","","\t\tdata._selected_cells[ colIdx ] = false;","","\t\t// Remove class only if the cells exist, and the cell is not column","\t\t// selected, in which case the class should remain (since it is selected","\t\t// in the column)","\t\tif ( data.anCells && ! ctx.aoColumns[ colIdx ]._select_selected ) {","\t\t\t$( data.anCells[ colIdx ] ).removeClass( ctx._select.className );","\t\t}","\t} );","","\tthis.iterator( 'table', function ( ctx, i ) {","\t\teventTrigger( api, 'deselect', [ 'cell', api[i] ], true );","\t} );","","\treturn this;","} );","","","","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"," * Buttons"," */","function i18n( label, def ) {","\treturn function (dt) {","\t\treturn dt.i18n( 'buttons.'+label, def );","\t};","}","","// Common events with suitable namespaces","function namespacedEvents ( config ) {","\tvar unique = config._eventNamespace;","","\treturn 'draw.dt.DT'+unique+' select.dt.DT'+unique+' deselect.dt.DT'+unique;","}","","function enabled ( dt, config ) {","\tif ( $.inArray( 'rows', config.limitTo ) !== -1 && dt.rows( { selected: true } ).any() ) {","\t\treturn true;","\t}","","\tif ( $.inArray( 'columns', config.limitTo ) !== -1 && dt.columns( { selected: true } ).any() ) {","\t\treturn true;","\t}","","\tif ( $.inArray( 'cells', config.limitTo ) !== -1 && dt.cells( { selected: true } ).any() ) {","\t\treturn true;","\t}","","\treturn false;","}","","var _buttonNamespace = 0;","","$.extend( DataTable.ext.buttons, {","\tselected: {","\t\ttext: i18n( 'selected', 'Selected' ),","\t\tclassName: 'buttons-selected',","\t\tlimitTo: [ 'rows', 'columns', 'cells' ],","\t\tinit: function ( dt, node, config ) {","\t\t\tvar that = this;","\t\t\tconfig._eventNamespace = '.select'+(_buttonNamespace++);","","\t\t\t// .DT namespace listeners are removed by DataTables automatically","\t\t\t// on table destroy","\t\t\tdt.on( namespacedEvents(config), function () {","\t\t\t\tthat.enable( enabled(dt, config) );","\t\t\t} );","","\t\t\tthis.disable();","\t\t},","\t\tdestroy: function ( dt, node, config ) {","\t\t\tdt.off( config._eventNamespace );","\t\t}","\t},","\tselectedSingle: {","\t\ttext: i18n( 'selectedSingle', 'Selected single' ),","\t\tclassName: 'buttons-selected-single',","\t\tinit: function ( dt, node, config ) {","\t\t\tvar that = this;","\t\t\tconfig._eventNamespace = '.select'+(_buttonNamespace++);","","\t\t\tdt.on( namespacedEvents(config), function () {","\t\t\t\tvar count = dt.rows( { selected: true } ).flatten().length +","\t\t\t\t            dt.columns( { selected: true } ).flatten().length +","\t\t\t\t            dt.cells( { selected: true } ).flatten().length;","","\t\t\t\tthat.enable( count === 1 );","\t\t\t} );","","\t\t\tthis.disable();","\t\t},","\t\tdestroy: function ( dt, node, config ) {","\t\t\tdt.off( config._eventNamespace );","\t\t}","\t},","\tselectAll: {","\t\ttext: i18n( 'selectAll', 'Select all' ),","\t\tclassName: 'buttons-select-all',","\t\taction: function () {","\t\t\tvar items = this.select.items();","\t\t\tthis[ items+'s' ]().select();","\t\t}","\t},","\tselectNone: {","\t\ttext: i18n( 'selectNone', 'Deselect all' ),","\t\tclassName: 'buttons-select-none',","\t\taction: function () {","\t\t\tclear( this.settings()[0], true );","\t\t},","\t\tinit: function ( dt, node, config ) {","\t\t\tvar that = this;","\t\t\tconfig._eventNamespace = '.select'+(_buttonNamespace++);","","\t\t\tdt.on( namespacedEvents(config), function () {","\t\t\t\tvar count = dt.rows( { selected: true } ).flatten().length +","\t\t\t\t            dt.columns( { selected: true } ).flatten().length +","\t\t\t\t            dt.cells( { selected: true } ).flatten().length;","","\t\t\t\tthat.enable( count > 0 );","\t\t\t} );","","\t\t\tthis.disable();","\t\t},","\t\tdestroy: function ( dt, node, config ) {","\t\t\tdt.off( config._eventNamespace );","\t\t}","\t}","} );","","$.each( [ 'Row', 'Column', 'Cell' ], function ( i, item ) {","\tvar lc = item.toLowerCase();","","\tDataTable.ext.buttons[ 'select'+item+'s' ] = {","\t\ttext: i18n( 'select'+item+'s', 'Select '+lc+'s' ),","\t\tclassName: 'buttons-select-'+lc+'s',","\t\taction: function () {","\t\t\tthis.select.items( lc );","\t\t},","\t\tinit: function ( dt ) {","\t\t\tvar that = this;","","\t\t\tdt.on( 'selectItems.dt.DT', function ( e, ctx, items ) {","\t\t\t\tthat.active( items === lc );","\t\t\t} );","\t\t}","\t};","} );","","","","/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"," * Initialisation"," */","","// DataTables creation - check if select has been defined in the options. Note","// this required that the table be in the document! If it isn't then something","// needs to trigger this method unfortunately. The next major release of","// DataTables will rework the events and address this.","$(document).on( 'preInit.dt.dtSelect', function (e, ctx) {","\tif ( e.namespace !== 'dt' ) {","\t\treturn;","\t}","","\tDataTable.select.init( new DataTable.Api( ctx ) );","} );","","","return DataTable.select;","}));","","})(jQuery); "],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":70,"column":11},"action":"insert","lines":["(function($) {","    \"use strict\";","","    $(document).ready(function() {","      $('#Table-occurence').DataTable({","        \"language\": {","          \"lengthMenu\": \"Mostrar _MENU_ ocorrências por página\",","          \"zeroRecords\": \"Nada encontrado\",","          \"info\": \"Mostrar página _PAGE_ de _PAGES_\",","          \"infoEmpty\": \"Nenhhuma ocorrência\",","          \"infoFiltered\": \"(Filtrado _MAX_ Ocorrências)\",","          \"search\": \"Procurar:\",","          \"paginate\": {","            \"next\": \"Próxima\",","            \"previous\": \"Anterior\"","          }","        }","      });","    });","    ","    let tabela = document.getElementById(\"Table-occurence\");","    let linhas = tabela.getElementsByTagName(\"tr\");","","    for (let i = 0; i < linhas.length; i++) {","      var linha = linhas[i];","      linha.addEventListener(\"click\", function() {","        //Adicionar ao atual","        selLinha(this, false); //Selecione apenas um","        //selLinha(this, true); //Selecione quantos quiser","      });","    }","","    /**","    Caso passe true, você pode selecionar multiplas linhas.","    Caso passe false, você só pode selecionar uma linha por vez.","    **/","    function selLinha(linha, multiplos) {","      if (!multiplos) {","        let linhas = linha.parentElement.getElementsByTagName(\"tr\");","        for (let i = 0; i < linhas.length; i++) {","          var linha_ = linhas[i];","          linha_.classList.remove(\"selecionado\");","        }","      }","      linha.classList.toggle(\"selecionado\");","    }","","    /**","    Exemplo de como capturar os dados","    **/","    let btnVisualizar = document.getElementById(\"view-\");","","    btnVisualizar.addEventListener(\"click\", function() {","      let selecionados = tabela.getElementsByClassName(\"selecionado\");","      //Verificar se eestá selecionado","      if (selecionados.length < 1) {","        alert(\"Selecione pelo menos uma linha\");","        return false;","      }","","      let dados = \"\";","","      for (let i = 0; i < selecionados.length; i++) {","        let selecionado = selecionados[i];","        selecionado = selecionado.getElementsByTagName(\"td\");","        dados += \"ID: \" + selecionado[0].innerHTML + \" - Nome: \" + selecionado[1].innerHTML + \" - Idade: \" + selecionado[2].innerHTML + \"\\n\";","      }","      window.location.replace(\"edit-occurence.html\")","    });","    ","})(jQuery);"],"id":5}],[{"start":{"row":4,"column":24},"end":{"row":4,"column":25},"action":"remove","lines":["e"],"id":6},{"start":{"row":4,"column":23},"end":{"row":4,"column":24},"action":"remove","lines":["c"]},{"start":{"row":4,"column":22},"end":{"row":4,"column":23},"action":"remove","lines":["n"]},{"start":{"row":4,"column":21},"end":{"row":4,"column":22},"action":"remove","lines":["e"]},{"start":{"row":4,"column":20},"end":{"row":4,"column":21},"action":"remove","lines":["r"]},{"start":{"row":4,"column":19},"end":{"row":4,"column":20},"action":"remove","lines":["u"]}],[{"start":{"row":4,"column":18},"end":{"row":4,"column":19},"action":"remove","lines":["c"],"id":7},{"start":{"row":4,"column":17},"end":{"row":4,"column":18},"action":"remove","lines":["c"]},{"start":{"row":4,"column":16},"end":{"row":4,"column":17},"action":"remove","lines":["o"]}],[{"start":{"row":4,"column":16},"end":{"row":4,"column":17},"action":"insert","lines":["a"],"id":8},{"start":{"row":4,"column":17},"end":{"row":4,"column":18},"action":"insert","lines":["s"]},{"start":{"row":4,"column":18},"end":{"row":4,"column":19},"action":"insert","lines":["s"]},{"start":{"row":4,"column":19},"end":{"row":4,"column":20},"action":"insert","lines":["o"]},{"start":{"row":4,"column":20},"end":{"row":4,"column":21},"action":"insert","lines":["c"]},{"start":{"row":4,"column":21},"end":{"row":4,"column":22},"action":"insert","lines":["i"]},{"start":{"row":4,"column":22},"end":{"row":4,"column":23},"action":"insert","lines":["a"]},{"start":{"row":4,"column":23},"end":{"row":4,"column":24},"action":"insert","lines":["t"]},{"start":{"row":4,"column":24},"end":{"row":4,"column":25},"action":"insert","lines":["e"]}],[{"start":{"row":20,"column":56},"end":{"row":20,"column":57},"action":"remove","lines":["e"],"id":9},{"start":{"row":20,"column":55},"end":{"row":20,"column":56},"action":"remove","lines":["c"]},{"start":{"row":20,"column":54},"end":{"row":20,"column":55},"action":"remove","lines":["n"]},{"start":{"row":20,"column":53},"end":{"row":20,"column":54},"action":"remove","lines":["e"]},{"start":{"row":20,"column":52},"end":{"row":20,"column":53},"action":"remove","lines":["r"]},{"start":{"row":20,"column":51},"end":{"row":20,"column":52},"action":"remove","lines":["u"]},{"start":{"row":20,"column":50},"end":{"row":20,"column":51},"action":"remove","lines":["c"]},{"start":{"row":20,"column":49},"end":{"row":20,"column":50},"action":"remove","lines":["c"]},{"start":{"row":20,"column":48},"end":{"row":20,"column":49},"action":"remove","lines":["o"]}],[{"start":{"row":20,"column":48},"end":{"row":20,"column":49},"action":"insert","lines":["a"],"id":10},{"start":{"row":20,"column":49},"end":{"row":20,"column":50},"action":"insert","lines":["s"]},{"start":{"row":20,"column":50},"end":{"row":20,"column":51},"action":"insert","lines":["s"]},{"start":{"row":20,"column":51},"end":{"row":20,"column":52},"action":"insert","lines":["o"]},{"start":{"row":20,"column":52},"end":{"row":20,"column":53},"action":"insert","lines":["c"]},{"start":{"row":20,"column":53},"end":{"row":20,"column":54},"action":"insert","lines":["i"]},{"start":{"row":20,"column":54},"end":{"row":20,"column":55},"action":"insert","lines":["a"]}],[{"start":{"row":20,"column":55},"end":{"row":20,"column":56},"action":"insert","lines":["t"],"id":11},{"start":{"row":20,"column":56},"end":{"row":20,"column":57},"action":"insert","lines":["e"]}],[{"start":{"row":50,"column":54},"end":{"row":50,"column":55},"action":"insert","lines":["d"],"id":12},{"start":{"row":50,"column":55},"end":{"row":50,"column":56},"action":"insert","lines":["a"]},{"start":{"row":50,"column":56},"end":{"row":50,"column":57},"action":"insert","lines":["t"]},{"start":{"row":50,"column":57},"end":{"row":50,"column":58},"action":"insert","lines":["a"]},{"start":{"row":50,"column":58},"end":{"row":50,"column":59},"action":"insert","lines":["-"]},{"start":{"row":50,"column":59},"end":{"row":50,"column":60},"action":"insert","lines":["a"]}],[{"start":{"row":50,"column":60},"end":{"row":50,"column":61},"action":"insert","lines":["s"],"id":13},{"start":{"row":50,"column":61},"end":{"row":50,"column":62},"action":"insert","lines":["s"]},{"start":{"row":50,"column":62},"end":{"row":50,"column":63},"action":"insert","lines":["o"]},{"start":{"row":50,"column":63},"end":{"row":50,"column":64},"action":"insert","lines":["c"]}],[{"start":{"row":67,"column":36},"end":{"row":67,"column":45},"action":"remove","lines":["occurence"],"id":14}],[{"start":{"row":67,"column":36},"end":{"row":67,"column":37},"action":"insert","lines":["a"],"id":15},{"start":{"row":67,"column":37},"end":{"row":67,"column":38},"action":"insert","lines":["s"]},{"start":{"row":67,"column":38},"end":{"row":67,"column":39},"action":"insert","lines":["s"]},{"start":{"row":67,"column":39},"end":{"row":67,"column":40},"action":"insert","lines":["o"]},{"start":{"row":67,"column":40},"end":{"row":67,"column":41},"action":"insert","lines":["c"]},{"start":{"row":67,"column":41},"end":{"row":67,"column":42},"action":"insert","lines":["i"]},{"start":{"row":67,"column":42},"end":{"row":67,"column":43},"action":"insert","lines":["a"]},{"start":{"row":67,"column":43},"end":{"row":67,"column":44},"action":"insert","lines":["t"]}],[{"start":{"row":67,"column":44},"end":{"row":67,"column":45},"action":"insert","lines":["e"],"id":16}],[{"start":{"row":6,"column":50},"end":{"row":6,"column":51},"action":"remove","lines":["s"],"id":17},{"start":{"row":6,"column":49},"end":{"row":6,"column":50},"action":"remove","lines":["a"]},{"start":{"row":6,"column":48},"end":{"row":6,"column":49},"action":"remove","lines":["i"]},{"start":{"row":6,"column":47},"end":{"row":6,"column":48},"action":"remove","lines":["c"]},{"start":{"row":6,"column":46},"end":{"row":6,"column":47},"action":"remove","lines":["n"]},{"start":{"row":6,"column":45},"end":{"row":6,"column":46},"action":"remove","lines":["ê"]},{"start":{"row":6,"column":44},"end":{"row":6,"column":45},"action":"remove","lines":["r"]},{"start":{"row":6,"column":43},"end":{"row":6,"column":44},"action":"remove","lines":["r"]},{"start":{"row":6,"column":42},"end":{"row":6,"column":43},"action":"remove","lines":["o"]},{"start":{"row":6,"column":41},"end":{"row":6,"column":42},"action":"remove","lines":["c"]},{"start":{"row":6,"column":40},"end":{"row":6,"column":41},"action":"remove","lines":["o"]}],[{"start":{"row":6,"column":40},"end":{"row":6,"column":41},"action":"insert","lines":["a"],"id":18},{"start":{"row":6,"column":41},"end":{"row":6,"column":42},"action":"insert","lines":["s"]},{"start":{"row":6,"column":42},"end":{"row":6,"column":43},"action":"insert","lines":["s"]},{"start":{"row":6,"column":43},"end":{"row":6,"column":44},"action":"insert","lines":["o"]},{"start":{"row":6,"column":44},"end":{"row":6,"column":45},"action":"insert","lines":["c"]},{"start":{"row":6,"column":45},"end":{"row":6,"column":46},"action":"insert","lines":["i"]},{"start":{"row":6,"column":46},"end":{"row":6,"column":47},"action":"insert","lines":["a"]},{"start":{"row":6,"column":47},"end":{"row":6,"column":48},"action":"insert","lines":["d"]},{"start":{"row":6,"column":48},"end":{"row":6,"column":49},"action":"insert","lines":["o"]},{"start":{"row":6,"column":49},"end":{"row":6,"column":50},"action":"insert","lines":["s"]}],[{"start":{"row":9,"column":42},"end":{"row":9,"column":43},"action":"remove","lines":["a"],"id":19},{"start":{"row":9,"column":41},"end":{"row":9,"column":42},"action":"remove","lines":["i"]},{"start":{"row":9,"column":40},"end":{"row":9,"column":41},"action":"remove","lines":["c"]},{"start":{"row":9,"column":39},"end":{"row":9,"column":40},"action":"remove","lines":["n"]},{"start":{"row":9,"column":38},"end":{"row":9,"column":39},"action":"remove","lines":["ê"]},{"start":{"row":9,"column":37},"end":{"row":9,"column":38},"action":"remove","lines":["r"]},{"start":{"row":9,"column":36},"end":{"row":9,"column":37},"action":"remove","lines":["r"]},{"start":{"row":9,"column":35},"end":{"row":9,"column":36},"action":"remove","lines":["o"]},{"start":{"row":9,"column":34},"end":{"row":9,"column":35},"action":"remove","lines":["c"]},{"start":{"row":9,"column":33},"end":{"row":9,"column":34},"action":"remove","lines":["o"]},{"start":{"row":9,"column":32},"end":{"row":9,"column":33},"action":"remove","lines":[" "]},{"start":{"row":9,"column":31},"end":{"row":9,"column":32},"action":"remove","lines":["a"]}],[{"start":{"row":9,"column":31},"end":{"row":9,"column":32},"action":"insert","lines":[" "],"id":20},{"start":{"row":9,"column":32},"end":{"row":9,"column":33},"action":"insert","lines":["a"]},{"start":{"row":9,"column":33},"end":{"row":9,"column":34},"action":"insert","lines":["s"]},{"start":{"row":9,"column":34},"end":{"row":9,"column":35},"action":"insert","lines":["s"]},{"start":{"row":9,"column":35},"end":{"row":9,"column":36},"action":"insert","lines":["o"]},{"start":{"row":9,"column":36},"end":{"row":9,"column":37},"action":"insert","lines":["c"]},{"start":{"row":9,"column":37},"end":{"row":9,"column":38},"action":"insert","lines":["i"]},{"start":{"row":9,"column":38},"end":{"row":9,"column":39},"action":"insert","lines":["a"]},{"start":{"row":9,"column":39},"end":{"row":9,"column":40},"action":"insert","lines":["d"]}],[{"start":{"row":9,"column":40},"end":{"row":9,"column":41},"action":"insert","lines":["o"],"id":21}],[{"start":{"row":10,"column":53},"end":{"row":10,"column":54},"action":"remove","lines":["s"],"id":22},{"start":{"row":10,"column":52},"end":{"row":10,"column":53},"action":"remove","lines":["a"]},{"start":{"row":10,"column":51},"end":{"row":10,"column":52},"action":"remove","lines":["i"]},{"start":{"row":10,"column":50},"end":{"row":10,"column":51},"action":"remove","lines":["c"]},{"start":{"row":10,"column":49},"end":{"row":10,"column":50},"action":"remove","lines":["n"]},{"start":{"row":10,"column":48},"end":{"row":10,"column":49},"action":"remove","lines":["ê"]},{"start":{"row":10,"column":47},"end":{"row":10,"column":48},"action":"remove","lines":["r"]},{"start":{"row":10,"column":46},"end":{"row":10,"column":47},"action":"remove","lines":["r"]},{"start":{"row":10,"column":45},"end":{"row":10,"column":46},"action":"remove","lines":["o"]}],[{"start":{"row":10,"column":44},"end":{"row":10,"column":45},"action":"remove","lines":["c"],"id":23},{"start":{"row":10,"column":43},"end":{"row":10,"column":44},"action":"remove","lines":["O"]}],[{"start":{"row":10,"column":43},"end":{"row":10,"column":44},"action":"insert","lines":["s"],"id":24},{"start":{"row":10,"column":44},"end":{"row":10,"column":45},"action":"insert","lines":["ó"]},{"start":{"row":10,"column":45},"end":{"row":10,"column":46},"action":"insert","lines":["c"]},{"start":{"row":10,"column":46},"end":{"row":10,"column":47},"action":"insert","lines":["i"]},{"start":{"row":10,"column":47},"end":{"row":10,"column":48},"action":"insert","lines":["o"]},{"start":{"row":10,"column":48},"end":{"row":10,"column":49},"action":"insert","lines":["s"]}],[{"start":{"row":67,"column":34},"end":{"row":67,"column":35},"action":"remove","lines":["t"],"id":25},{"start":{"row":67,"column":33},"end":{"row":67,"column":34},"action":"remove","lines":["i"]},{"start":{"row":67,"column":32},"end":{"row":67,"column":33},"action":"remove","lines":["d"]},{"start":{"row":67,"column":31},"end":{"row":67,"column":32},"action":"remove","lines":["e"]}],[{"start":{"row":67,"column":31},"end":{"row":67,"column":32},"action":"insert","lines":["v"],"id":26},{"start":{"row":67,"column":32},"end":{"row":67,"column":33},"action":"insert","lines":["i"]},{"start":{"row":67,"column":33},"end":{"row":67,"column":34},"action":"insert","lines":["e"]},{"start":{"row":67,"column":34},"end":{"row":67,"column":35},"action":"insert","lines":["w"]}]]},"ace":{"folds":[],"scrolltop":580,"scrollleft":0,"selection":{"start":{"row":67,"column":35},"end":{"row":67,"column":35},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":317,"mode":"ace/mode/javascript"}},"timestamp":1606856404991,"hash":"c6949a2cb60eae07149b4d24313337c1b05c08a3"}